# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct IntegrationActionsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `IntegrationActionsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ IntegrationActionsApi }) = "http://your-mattermost-url.com/api/v4"

const _returntypes_open_interactive_dialog_IntegrationActionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => StatusOK,
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
)

function _oacinternal_open_interactive_dialog(_api::IntegrationActionsApi, open_interactive_dialog_request::OpenInteractiveDialogRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_open_interactive_dialog_IntegrationActionsApi, "/actions/dialogs/open", ["bearerAuth", ], open_interactive_dialog_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Open a dialog

Open an interactive dialog using a trigger ID provided by a slash command, or some other action payload. See https://docs.mattermost.com/developer/interactive-dialogs.html for more information on interactive dialogs. __Minimum server version: 5.6__ 

Params:
- open_interactive_dialog_request::OpenInteractiveDialogRequest (required)

Return: StatusOK, OpenAPI.Clients.ApiResponse
"""
function open_interactive_dialog(_api::IntegrationActionsApi, open_interactive_dialog_request::OpenInteractiveDialogRequest; _mediaType=nothing)
    _ctx = _oacinternal_open_interactive_dialog(_api, open_interactive_dialog_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function open_interactive_dialog(_api::IntegrationActionsApi, response_stream::Channel, open_interactive_dialog_request::OpenInteractiveDialogRequest; _mediaType=nothing)
    _ctx = _oacinternal_open_interactive_dialog(_api, open_interactive_dialog_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_submit_interactive_dialog_IntegrationActionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => StatusOK,
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("403", "x"=>".") * "\$") => AppError,
)

function _oacinternal_submit_interactive_dialog(_api::IntegrationActionsApi, submit_interactive_dialog_request::SubmitInteractiveDialogRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_submit_interactive_dialog_IntegrationActionsApi, "/actions/dialogs/submit", ["bearerAuth", ], submit_interactive_dialog_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Submit a dialog

Endpoint used by the Mattermost clients to submit a dialog. See https://docs.mattermost.com/developer/interactive-dialogs.html for more information on interactive dialogs. __Minimum server version: 5.6__ 

Params:
- submit_interactive_dialog_request::SubmitInteractiveDialogRequest (required)

Return: StatusOK, OpenAPI.Clients.ApiResponse
"""
function submit_interactive_dialog(_api::IntegrationActionsApi, submit_interactive_dialog_request::SubmitInteractiveDialogRequest; _mediaType=nothing)
    _ctx = _oacinternal_submit_interactive_dialog(_api, submit_interactive_dialog_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function submit_interactive_dialog(_api::IntegrationActionsApi, response_stream::Channel, submit_interactive_dialog_request::SubmitInteractiveDialogRequest; _mediaType=nothing)
    _ctx = _oacinternal_submit_interactive_dialog(_api, submit_interactive_dialog_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export open_interactive_dialog
export submit_interactive_dialog
