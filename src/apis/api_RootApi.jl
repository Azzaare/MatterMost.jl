# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct RootApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `RootApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ RootApi }) = "http://your-mattermost-url.com/api/v4"

const _returntypes_acknowledge_notification_RootApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => PushNotification,
    Regex("^" * replace("404", "x"=>".") * "\$") => AppError,
)

function _oacinternal_acknowledge_notification(_api::RootApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_acknowledge_notification_RootApi, "/notifications/ack", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Acknowledge receiving of a notification

__Minimum server version__: 3.10 ##### Permissions Must be logged in. 

Params:

Return: PushNotification, OpenAPI.Clients.ApiResponse
"""
function acknowledge_notification(_api::RootApi; _mediaType=nothing)
    _ctx = _oacinternal_acknowledge_notification(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function acknowledge_notification(_api::RootApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_acknowledge_notification(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export acknowledge_notification
