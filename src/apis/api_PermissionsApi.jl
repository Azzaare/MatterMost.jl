# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct PermissionsApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `PermissionsApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ PermissionsApi }) = "http://your-mattermost-url.com/api/v4"

const _returntypes_get_ancillary_permissions_PermissionsApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{String},
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
)

function _oacinternal_get_ancillary_permissions(_api::PermissionsApi; subsection_permissions=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_ancillary_permissions_PermissionsApi, "/permissions/ancillary", ["bearerAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "subsection_permissions", subsection_permissions)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Return all system console subsection ancillary permissions

Returns all the ancillary permissions for the corresponding system console subsection permissions appended to the requested permission subsections.  __Minimum server version__: 5.35 

Params:
- subsection_permissions::String

Return: Vector{String}, OpenAPI.Clients.ApiResponse
"""
function get_ancillary_permissions(_api::PermissionsApi; subsection_permissions=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_ancillary_permissions(_api; subsection_permissions=subsection_permissions, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_ancillary_permissions(_api::PermissionsApi, response_stream::Channel; subsection_permissions=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_ancillary_permissions(_api; subsection_permissions=subsection_permissions, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export get_ancillary_permissions
