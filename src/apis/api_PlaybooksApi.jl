# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct PlaybooksApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `PlaybooksApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ PlaybooksApi }) = "http://your-mattermost-url.com/api/v4"

const _returntypes_create_playbook_PlaybooksApi = Dict{Regex,Type}(
    Regex("^" * replace("201", "x"=>".") * "\$") => Any,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_create_playbook(_api::PlaybooksApi; u_n_k_n_o_w_n_b_a_s_e_t_y_p_e=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_playbook_PlaybooksApi, "/playbooks", ["BearerAuth", ], u_n_k_n_o_w_n_b_a_s_e_t_y_p_e)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create a playbook

Params:
- u_n_k_n_o_w_n_b_a_s_e_t_y_p_e::UNKNOWN_BASE_TYPE

Return: Any, OpenAPI.Clients.ApiResponse
"""
function create_playbook(_api::PlaybooksApi; u_n_k_n_o_w_n_b_a_s_e_t_y_p_e=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_playbook(_api; u_n_k_n_o_w_n_b_a_s_e_t_y_p_e=u_n_k_n_o_w_n_b_a_s_e_t_y_p_e, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_playbook(_api::PlaybooksApi, response_stream::Channel; u_n_k_n_o_w_n_b_a_s_e_t_y_p_e=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_playbook(_api; u_n_k_n_o_w_n_b_a_s_e_t_y_p_e=u_n_k_n_o_w_n_b_a_s_e_t_y_p_e, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_delete_playbook_PlaybooksApi = Dict{Regex,Type}(
    Regex("^" * replace("204", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_delete_playbook(_api::PlaybooksApi, id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_delete_playbook_PlaybooksApi, "/playbooks/{id}", ["BearerAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Delete a playbook

Params:
- id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function delete_playbook(_api::PlaybooksApi, id::String; _mediaType=nothing)
    _ctx = _oacinternal_delete_playbook(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function delete_playbook(_api::PlaybooksApi, response_stream::Channel, id::String; _mediaType=nothing)
    _ctx = _oacinternal_delete_playbook(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_playbook_PlaybooksApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Playbook,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_get_playbook(_api::PlaybooksApi, id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_playbook_PlaybooksApi, "/playbooks/{id}", ["BearerAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get a playbook

Params:
- id::String (required)

Return: Playbook, OpenAPI.Clients.ApiResponse
"""
function get_playbook(_api::PlaybooksApi, id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_playbook(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_playbook(_api::PlaybooksApi, response_stream::Channel, id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_playbook(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_playbooks_PlaybooksApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => PlaybookList,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_get_playbooks(_api::PlaybooksApi, team_id::String; page=nothing, per_page=nothing, sort=nothing, direction=nothing, with_archived=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_playbooks_PlaybooksApi, "/playbooks", ["BearerAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "team_id", team_id)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "page", page)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "per_page", per_page)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "sort", sort)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "direction", direction)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "with_archived", with_archived)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""List all playbooks

Retrieve a paged list of playbooks, filtered by team, and sorted by title, number of stages or number of steps.

Params:
- team_id::String (required)
- page::Int64
- per_page::Int64
- sort::String
- direction::String
- with_archived::Bool

Return: PlaybookList, OpenAPI.Clients.ApiResponse
"""
function get_playbooks(_api::PlaybooksApi, team_id::String; page=nothing, per_page=nothing, sort=nothing, direction=nothing, with_archived=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_playbooks(_api, team_id; page=page, per_page=per_page, sort=sort, direction=direction, with_archived=with_archived, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_playbooks(_api::PlaybooksApi, response_stream::Channel, team_id::String; page=nothing, per_page=nothing, sort=nothing, direction=nothing, with_archived=nothing, _mediaType=nothing)
    _ctx = _oacinternal_get_playbooks(_api, team_id; page=page, per_page=per_page, sort=sort, direction=direction, with_archived=with_archived, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_update_playbook_PlaybooksApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_update_playbook(_api::PlaybooksApi, id::String; playbook=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_update_playbook_PlaybooksApi, "/playbooks/{id}", ["BearerAuth", ], playbook)
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Update a playbook

Params:
- id::String (required)
- playbook::Playbook

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function update_playbook(_api::PlaybooksApi, id::String; playbook=nothing, _mediaType=nothing)
    _ctx = _oacinternal_update_playbook(_api, id; playbook=playbook, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function update_playbook(_api::PlaybooksApi, response_stream::Channel, id::String; playbook=nothing, _mediaType=nothing)
    _ctx = _oacinternal_update_playbook(_api, id; playbook=playbook, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export create_playbook
export delete_playbook
export get_playbook
export get_playbooks
export update_playbook
