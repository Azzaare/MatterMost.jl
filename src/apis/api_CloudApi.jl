# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct CloudApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `CloudApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ CloudApi }) = "http://your-mattermost-url.com/api/v4"

const _returntypes_confirm_customer_payment_CloudApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("403", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("501", "x"=>".") * "\$") => AppError,
)

function _oacinternal_confirm_customer_payment(_api::CloudApi; stripe_setup_intent_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_confirm_customer_payment_CloudApi, "/cloud/payment/confirm", ["bearerAuth", ])
    OpenAPI.Clients.set_param(_ctx.form, "stripe_setup_intent_id", stripe_setup_intent_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["multipart/form-data", ] : [_mediaType])
    return _ctx
end

@doc raw"""Completes the payment setup intent

Confirms the payment setup intent initiated when posting to `/cloud/payment`. ##### Permissions Must have `manage_system` permission and be licensed for Cloud. __Minimum server version__: 5.28 __Note:__ This is intended for internal use and is subject to change. 

Params:
- stripe_setup_intent_id::String

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function confirm_customer_payment(_api::CloudApi; stripe_setup_intent_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_confirm_customer_payment(_api; stripe_setup_intent_id=stripe_setup_intent_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function confirm_customer_payment(_api::CloudApi, response_stream::Channel; stripe_setup_intent_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_confirm_customer_payment(_api; stripe_setup_intent_id=stripe_setup_intent_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_create_customer_payment_CloudApi = Dict{Regex,Type}(
    Regex("^" * replace("201", "x"=>".") * "\$") => PaymentSetupIntent,
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("403", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("501", "x"=>".") * "\$") => AppError,
)

function _oacinternal_create_customer_payment(_api::CloudApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_customer_payment_CloudApi, "/cloud/payment", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Create a customer setup payment intent

Creates a customer setup payment intent for the given Mattermost cloud installation.  ##### Permissions  Must have `manage_system` permission and be licensed for Cloud.  __Minimum server version__: 5.28 __Note:__: This is intended for internal use and is subject to change. 

Params:

Return: PaymentSetupIntent, OpenAPI.Clients.ApiResponse
"""
function create_customer_payment(_api::CloudApi; _mediaType=nothing)
    _ctx = _oacinternal_create_customer_payment(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_customer_payment(_api::CloudApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_create_customer_payment(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_cloud_customer_CloudApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CloudCustomer,
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("403", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("501", "x"=>".") * "\$") => AppError,
)

function _oacinternal_get_cloud_customer(_api::CloudApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_cloud_customer_CloudApi, "/cloud/customer", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get cloud customer

Retrieves the customer information for the Mattermost Cloud customer bound to this installation. ##### Permissions Must have `manage_system` permission and be licensed for Cloud. __Minimum server version__: 5.28 __Note:__ This is intended for internal use and is subject to change. 

Params:

Return: CloudCustomer, OpenAPI.Clients.ApiResponse
"""
function get_cloud_customer(_api::CloudApi; _mediaType=nothing)
    _ctx = _oacinternal_get_cloud_customer(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_cloud_customer(_api::CloudApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_cloud_customer(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_cloud_limits_CloudApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductLimits,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("500", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("501", "x"=>".") * "\$") => AppError,
)

function _oacinternal_get_cloud_limits(_api::CloudApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_cloud_limits_CloudApi, "/cloud/limits", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get cloud workspace limits

Retrieve any cloud workspace limits applicable to this instance. ##### Permissions Must be authenticated and be licensed for Cloud. __Minimum server version__: 7.0 __Note:__ This is intended for internal use and is subject to change. 

Params:

Return: ProductLimits, OpenAPI.Clients.ApiResponse
"""
function get_cloud_limits(_api::CloudApi; _mediaType=nothing)
    _ctx = _oacinternal_get_cloud_limits(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_cloud_limits(_api::CloudApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_cloud_limits(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_cloud_products_CloudApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Product},
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("403", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("501", "x"=>".") * "\$") => AppError,
)

function _oacinternal_get_cloud_products(_api::CloudApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_cloud_products_CloudApi, "/cloud/products", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get cloud products

Retrieve a list of all products that are offered for Mattermost Cloud. ##### Permissions Must have `manage_system` permission and be licensed for Cloud. __Minimum server version__: 5.28 __Note:__ This is intended for internal use and is subject to change. 

Params:

Return: Vector{Product}, OpenAPI.Clients.ApiResponse
"""
function get_cloud_products(_api::CloudApi; _mediaType=nothing)
    _ctx = _oacinternal_get_cloud_products(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_cloud_products(_api::CloudApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_cloud_products(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_invoice_for_subscription_as_pdf_CloudApi = Dict{Regex,Type}(
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("403", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("501", "x"=>".") * "\$") => AppError,
)

function _oacinternal_get_invoice_for_subscription_as_pdf(_api::CloudApi, invoice_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_invoice_for_subscription_as_pdf_CloudApi, "/cloud/subscription/invoices/{invoice_id}/pdf", ["bearerAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "invoice_id", invoice_id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get cloud invoice PDF

Retrieves the PDF for the invoice passed as parameter ##### Permissions Must have `manage_system` permission and be licensed for Cloud. __Minimum server version__: 5.30 __Note:__ This is intended for internal use and is subject to change. 

Params:
- invoice_id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function get_invoice_for_subscription_as_pdf(_api::CloudApi, invoice_id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_invoice_for_subscription_as_pdf(_api, invoice_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_invoice_for_subscription_as_pdf(_api::CloudApi, response_stream::Channel, invoice_id::String; _mediaType=nothing)
    _ctx = _oacinternal_get_invoice_for_subscription_as_pdf(_api, invoice_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_invoices_for_subscription_CloudApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{Invoice},
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("403", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("501", "x"=>".") * "\$") => AppError,
)

function _oacinternal_get_invoices_for_subscription(_api::CloudApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_invoices_for_subscription_CloudApi, "/cloud/subscription/invoices", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get cloud subscription invoices

Retrieves the invoices for the subscription bound to this installation. ##### Permissions Must have `manage_system` permission and be licensed for Cloud. __Minimum server version__: 5.30 __Note:__ This is intended for internal use and is subject to change. 

Params:

Return: Vector{Invoice}, OpenAPI.Clients.ApiResponse
"""
function get_invoices_for_subscription(_api::CloudApi; _mediaType=nothing)
    _ctx = _oacinternal_get_invoices_for_subscription(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_invoices_for_subscription(_api::CloudApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_invoices_for_subscription(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_subscription_CloudApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Subscription,
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("403", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("501", "x"=>".") * "\$") => AppError,
)

function _oacinternal_get_subscription(_api::CloudApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_subscription_CloudApi, "/cloud/subscription", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get cloud subscription

Retrieves the subscription information for the Mattermost Cloud customer bound to this installation. ##### Permissions Must have `manage_system` permission and be licensed for Cloud. __Minimum server version__: 5.28 __Note:__ This is intended for internal use and is subject to change. 

Params:

Return: Subscription, OpenAPI.Clients.ApiResponse
"""
function get_subscription(_api::CloudApi; _mediaType=nothing)
    _ctx = _oacinternal_get_subscription(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_subscription(_api::CloudApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_subscription(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_post_endpoint_for_cws_webhooks_CloudApi = Dict{Regex,Type}(
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("403", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("501", "x"=>".") * "\$") => AppError,
)

function _oacinternal_post_endpoint_for_cws_webhooks(_api::CloudApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_post_endpoint_for_cws_webhooks_CloudApi, "/cloud/webhook", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""POST endpoint for CWS Webhooks

An endpoint for processing webhooks from the Customer Portal ##### Permissions This endpoint should only be accessed by CWS, in a Mattermost Cloud instance __Minimum server version__: 5.30 __Note:__ This is intended for internal use and is subject to change. 

Params:

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function post_endpoint_for_cws_webhooks(_api::CloudApi; _mediaType=nothing)
    _ctx = _oacinternal_post_endpoint_for_cws_webhooks(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function post_endpoint_for_cws_webhooks(_api::CloudApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_post_endpoint_for_cws_webhooks(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_update_cloud_customer_CloudApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CloudCustomer,
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("403", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("501", "x"=>".") * "\$") => AppError,
)

function _oacinternal_update_cloud_customer(_api::CloudApi, update_cloud_customer_request::UpdateCloudCustomerRequest; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_update_cloud_customer_CloudApi, "/cloud/customer", ["bearerAuth", ], update_cloud_customer_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Update cloud customer

Updates the customer information for the Mattermost Cloud customer bound to this installation. ##### Permissions Must have `manage_system` permission and be licensed for Cloud. __Minimum server version__: 5.29 __Note:__ This is intended for internal use and is subject to change. 

Params:
- update_cloud_customer_request::UpdateCloudCustomerRequest (required)

Return: CloudCustomer, OpenAPI.Clients.ApiResponse
"""
function update_cloud_customer(_api::CloudApi, update_cloud_customer_request::UpdateCloudCustomerRequest; _mediaType=nothing)
    _ctx = _oacinternal_update_cloud_customer(_api, update_cloud_customer_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function update_cloud_customer(_api::CloudApi, response_stream::Channel, update_cloud_customer_request::UpdateCloudCustomerRequest; _mediaType=nothing)
    _ctx = _oacinternal_update_cloud_customer(_api, update_cloud_customer_request; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_update_cloud_customer_address_CloudApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CloudCustomer,
    Regex("^" * replace("400", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("403", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("501", "x"=>".") * "\$") => AppError,
)

function _oacinternal_update_cloud_customer_address(_api::CloudApi, address::Address; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_update_cloud_customer_address_CloudApi, "/cloud/customer/address", ["bearerAuth", ], address)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Update cloud customer address

Updates the company address for the Mattermost Cloud customer bound to this installation. ##### Permissions Must have `manage_system` permission and be licensed for Cloud. __Minimum server version__: 5.29 __Note:__ This is intended for internal use and is subject to change. 

Params:
- address::Address (required)

Return: CloudCustomer, OpenAPI.Clients.ApiResponse
"""
function update_cloud_customer_address(_api::CloudApi, address::Address; _mediaType=nothing)
    _ctx = _oacinternal_update_cloud_customer_address(_api, address; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function update_cloud_customer_address(_api::CloudApi, response_stream::Channel, address::Address; _mediaType=nothing)
    _ctx = _oacinternal_update_cloud_customer_address(_api, address; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export confirm_customer_payment
export create_customer_payment
export get_cloud_customer
export get_cloud_limits
export get_cloud_products
export get_invoice_for_subscription_as_pdf
export get_invoices_for_subscription
export get_subscription
export post_endpoint_for_cws_webhooks
export update_cloud_customer
export update_cloud_customer_address
