# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct UsageApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `UsageApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ UsageApi }) = "http://your-mattermost-url.com/api/v4"

const _returntypes_get_posts_usage_UsageApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => PostsUsage,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("500", "x"=>".") * "\$") => AppError,
)

function _oacinternal_get_posts_usage(_api::UsageApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_posts_usage_UsageApi, "/usage/posts", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get current usage of posts

Retrieve rounded off total no. of posts for this instance. Example: returns 4000 instead of 4321 ##### Permissions Must be authenticated. __Minimum server version__: 7.0 

Params:

Return: PostsUsage, OpenAPI.Clients.ApiResponse
"""
function get_posts_usage(_api::UsageApi; _mediaType=nothing)
    _ctx = _oacinternal_get_posts_usage(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_posts_usage(_api::UsageApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_posts_usage(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_storage_usage_UsageApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => StorageUsage,
    Regex("^" * replace("401", "x"=>".") * "\$") => AppError,
    Regex("^" * replace("500", "x"=>".") * "\$") => AppError,
)

function _oacinternal_get_storage_usage(_api::UsageApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_storage_usage_UsageApi, "/usage/storage", ["bearerAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get the total file storage usage for the instance in bytes.

Get the total file storage usage for the instance in bytes rounded down to the most significant digit. Example: returns 4000 instead of 4321 ##### Permissions Must be authenticated. __Minimum server version__: 7.1 

Params:

Return: StorageUsage, OpenAPI.Clients.ApiResponse
"""
function get_storage_usage(_api::UsageApi; _mediaType=nothing)
    _ctx = _oacinternal_get_storage_usage(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_storage_usage(_api::UsageApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_get_storage_usage(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export get_posts_usage
export get_storage_usage
