# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct InternalApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `InternalApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ InternalApi }) = "http://your-mattermost-url.com/api/v4"

const _returntypes_create_playbook_run_from_dialog_InternalApi = Dict{Regex,Type}(
    Regex("^" * replace("201", "x"=>".") * "\$") => PlaybookRun,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("403", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_create_playbook_run_from_dialog(_api::InternalApi; create_playbook_run_from_dialog_request=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_create_playbook_run_from_dialog_InternalApi, "/runs/dialog", ["BearerAuth", ], create_playbook_run_from_dialog_request)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Create a new playbook run from dialog

This is an internal endpoint to create a playbook run from the submission of an interactive dialog, filled by a user in the webapp. See [Interactive Dialogs](https://docs.mattermost.com/developer/interactive-dialogs.html) for more information.

Params:
- create_playbook_run_from_dialog_request::CreatePlaybookRunFromDialogRequest

Return: PlaybookRun, OpenAPI.Clients.ApiResponse
"""
function create_playbook_run_from_dialog(_api::InternalApi; create_playbook_run_from_dialog_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_playbook_run_from_dialog(_api; create_playbook_run_from_dialog_request=create_playbook_run_from_dialog_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function create_playbook_run_from_dialog(_api::InternalApi, response_stream::Channel; create_playbook_run_from_dialog_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_create_playbook_run_from_dialog(_api; create_playbook_run_from_dialog_request=create_playbook_run_from_dialog_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_end_playbook_run_dialog_InternalApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_end_playbook_run_dialog(_api::InternalApi, id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_end_playbook_run_dialog_InternalApi, "/runs/{id}/end", ["BearerAuth", ])
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""End a playbook run from dialog

This is an internal endpoint to end a playbook run via a confirmation dialog, submitted by a user in the webapp.

Params:
- id::String (required)

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function end_playbook_run_dialog(_api::InternalApi, id::String; _mediaType=nothing)
    _ctx = _oacinternal_end_playbook_run_dialog(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function end_playbook_run_dialog(_api::InternalApi, response_stream::Channel, id::String; _mediaType=nothing)
    _ctx = _oacinternal_end_playbook_run_dialog(_api, id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_get_checklist_autocomplete_InternalApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Vector{GetChecklistAutocomplete200ResponseInner},
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_get_checklist_autocomplete(_api::InternalApi, channel_i_d::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_get_checklist_autocomplete_InternalApi, "/runs/checklist-autocomplete", ["BearerAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "channel_ID", channel_i_d)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""Get autocomplete data for /playbook check

This is an internal endpoint used by the autocomplete system to retrieve the data needed to show the list of items that the user can check.

Params:
- channel_i_d::String (required)

Return: Vector{GetChecklistAutocomplete200ResponseInner}, OpenAPI.Clients.ApiResponse
"""
function get_checklist_autocomplete(_api::InternalApi, channel_i_d::String; _mediaType=nothing)
    _ctx = _oacinternal_get_checklist_autocomplete(_api, channel_i_d; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function get_checklist_autocomplete(_api::InternalApi, response_stream::Channel, channel_i_d::String; _mediaType=nothing)
    _ctx = _oacinternal_get_checklist_autocomplete(_api, channel_i_d; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_next_stage_dialog_InternalApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => Nothing,
    Regex("^" * replace("400", "x"=>".") * "\$") => Error,
    Regex("^" * replace("500", "x"=>".") * "\$") => Error,
)

function _oacinternal_next_stage_dialog(_api::InternalApi, id::String; next_stage_dialog_request=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_next_stage_dialog_InternalApi, "/runs/{id}/next-stage-dialog", ["BearerAuth", ], next_stage_dialog_request)
    OpenAPI.Clients.set_param(_ctx.path, "id", id)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""Go to next stage from dialog

This is an internal endpoint to go to the next stage via a confirmation dialog, submitted by a user in the webapp.

Params:
- id::String (required)
- next_stage_dialog_request::NextStageDialogRequest

Return: Nothing, OpenAPI.Clients.ApiResponse
"""
function next_stage_dialog(_api::InternalApi, id::String; next_stage_dialog_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_next_stage_dialog(_api, id; next_stage_dialog_request=next_stage_dialog_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function next_stage_dialog(_api::InternalApi, response_stream::Channel, id::String; next_stage_dialog_request=nothing, _mediaType=nothing)
    _ctx = _oacinternal_next_stage_dialog(_api, id; next_stage_dialog_request=next_stage_dialog_request, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export create_playbook_run_from_dialog
export end_playbook_run_dialog
export get_checklist_autocomplete
export next_stage_dialog
