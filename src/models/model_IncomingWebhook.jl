# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""IncomingWebhook

    IncomingWebhook(;
        id=nothing,
        create_at=nothing,
        update_at=nothing,
        delete_at=nothing,
        channel_id=nothing,
        description=nothing,
        display_name=nothing,
    )

    - id::String : The unique identifier for this incoming webhook
    - create_at::Int64 : The time in milliseconds a incoming webhook was created
    - update_at::Int64 : The time in milliseconds a incoming webhook was last updated
    - delete_at::Int64 : The time in milliseconds a incoming webhook was deleted
    - channel_id::String : The ID of a public channel or private group that receives the webhook payloads
    - description::String : The description for this incoming webhook
    - display_name::String : The display name for this incoming webhook
"""
Base.@kwdef mutable struct IncomingWebhook <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    create_at::Union{Nothing, Int64} = nothing
    update_at::Union{Nothing, Int64} = nothing
    delete_at::Union{Nothing, Int64} = nothing
    channel_id::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    display_name::Union{Nothing, String} = nothing

    function IncomingWebhook(id, create_at, update_at, delete_at, channel_id, description, display_name, )
        OpenAPI.validate_property(IncomingWebhook, Symbol("id"), id)
        OpenAPI.validate_property(IncomingWebhook, Symbol("create_at"), create_at)
        OpenAPI.validate_property(IncomingWebhook, Symbol("update_at"), update_at)
        OpenAPI.validate_property(IncomingWebhook, Symbol("delete_at"), delete_at)
        OpenAPI.validate_property(IncomingWebhook, Symbol("channel_id"), channel_id)
        OpenAPI.validate_property(IncomingWebhook, Symbol("description"), description)
        OpenAPI.validate_property(IncomingWebhook, Symbol("display_name"), display_name)
        return new(id, create_at, update_at, delete_at, channel_id, description, display_name, )
    end
end # type IncomingWebhook

const _property_types_IncomingWebhook = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("create_at")=>"Int64", Symbol("update_at")=>"Int64", Symbol("delete_at")=>"Int64", Symbol("channel_id")=>"String", Symbol("description")=>"String", Symbol("display_name")=>"String", )
OpenAPI.property_type(::Type{ IncomingWebhook }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IncomingWebhook[name]))}

function check_required(o::IncomingWebhook)
    true
end

function OpenAPI.validate_property(::Type{ IncomingWebhook }, name::Symbol, val)
    if name === Symbol("create_at")
        OpenAPI.validate_param(name, "IncomingWebhook", :format, val, "int64")
    end
    if name === Symbol("update_at")
        OpenAPI.validate_param(name, "IncomingWebhook", :format, val, "int64")
    end
    if name === Symbol("delete_at")
        OpenAPI.validate_param(name, "IncomingWebhook", :format, val, "int64")
    end
end
