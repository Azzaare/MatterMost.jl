# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Audit

    Audit(;
        id=nothing,
        create_at=nothing,
        user_id=nothing,
        action=nothing,
        extra_info=nothing,
        ip_address=nothing,
        session_id=nothing,
    )

    - id::String
    - create_at::Int64 : The time in milliseconds a audit was created
    - user_id::String
    - action::String
    - extra_info::String
    - ip_address::String
    - session_id::String
"""
Base.@kwdef mutable struct Audit <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    create_at::Union{Nothing, Int64} = nothing
    user_id::Union{Nothing, String} = nothing
    action::Union{Nothing, String} = nothing
    extra_info::Union{Nothing, String} = nothing
    ip_address::Union{Nothing, String} = nothing
    session_id::Union{Nothing, String} = nothing

    function Audit(id, create_at, user_id, action, extra_info, ip_address, session_id, )
        OpenAPI.validate_property(Audit, Symbol("id"), id)
        OpenAPI.validate_property(Audit, Symbol("create_at"), create_at)
        OpenAPI.validate_property(Audit, Symbol("user_id"), user_id)
        OpenAPI.validate_property(Audit, Symbol("action"), action)
        OpenAPI.validate_property(Audit, Symbol("extra_info"), extra_info)
        OpenAPI.validate_property(Audit, Symbol("ip_address"), ip_address)
        OpenAPI.validate_property(Audit, Symbol("session_id"), session_id)
        return new(id, create_at, user_id, action, extra_info, ip_address, session_id, )
    end
end # type Audit

const _property_types_Audit = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("create_at")=>"Int64", Symbol("user_id")=>"String", Symbol("action")=>"String", Symbol("extra_info")=>"String", Symbol("ip_address")=>"String", Symbol("session_id")=>"String", )
OpenAPI.property_type(::Type{ Audit }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Audit[name]))}

function check_required(o::Audit)
    true
end

function OpenAPI.validate_property(::Type{ Audit }, name::Symbol, val)
    if name === Symbol("create_at")
        OpenAPI.validate_param(name, "Audit", :format, val, "int64")
    end
end
