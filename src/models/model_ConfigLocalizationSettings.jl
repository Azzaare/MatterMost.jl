# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Config_LocalizationSettings

    ConfigLocalizationSettings(;
        DefaultServerLocale=nothing,
        DefaultClientLocale=nothing,
        AvailableLocales=nothing,
    )

    - DefaultServerLocale::String
    - DefaultClientLocale::String
    - AvailableLocales::String
"""
Base.@kwdef mutable struct ConfigLocalizationSettings <: OpenAPI.APIModel
    DefaultServerLocale::Union{Nothing, String} = nothing
    DefaultClientLocale::Union{Nothing, String} = nothing
    AvailableLocales::Union{Nothing, String} = nothing

    function ConfigLocalizationSettings(DefaultServerLocale, DefaultClientLocale, AvailableLocales, )
        OpenAPI.validate_property(ConfigLocalizationSettings, Symbol("DefaultServerLocale"), DefaultServerLocale)
        OpenAPI.validate_property(ConfigLocalizationSettings, Symbol("DefaultClientLocale"), DefaultClientLocale)
        OpenAPI.validate_property(ConfigLocalizationSettings, Symbol("AvailableLocales"), AvailableLocales)
        return new(DefaultServerLocale, DefaultClientLocale, AvailableLocales, )
    end
end # type ConfigLocalizationSettings

const _property_types_ConfigLocalizationSettings = Dict{Symbol,String}(Symbol("DefaultServerLocale")=>"String", Symbol("DefaultClientLocale")=>"String", Symbol("AvailableLocales")=>"String", )
OpenAPI.property_type(::Type{ ConfigLocalizationSettings }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ConfigLocalizationSettings[name]))}

function check_required(o::ConfigLocalizationSettings)
    true
end

function OpenAPI.validate_property(::Type{ ConfigLocalizationSettings }, name::Symbol, val)
end
