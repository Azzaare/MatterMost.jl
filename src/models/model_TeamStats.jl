# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""TeamStats

    TeamStats(;
        team_id=nothing,
        total_member_count=nothing,
        active_member_count=nothing,
    )

    - team_id::String
    - total_member_count::Int64
    - active_member_count::Int64
"""
Base.@kwdef mutable struct TeamStats <: OpenAPI.APIModel
    team_id::Union{Nothing, String} = nothing
    total_member_count::Union{Nothing, Int64} = nothing
    active_member_count::Union{Nothing, Int64} = nothing

    function TeamStats(team_id, total_member_count, active_member_count, )
        OpenAPI.validate_property(TeamStats, Symbol("team_id"), team_id)
        OpenAPI.validate_property(TeamStats, Symbol("total_member_count"), total_member_count)
        OpenAPI.validate_property(TeamStats, Symbol("active_member_count"), active_member_count)
        return new(team_id, total_member_count, active_member_count, )
    end
end # type TeamStats

const _property_types_TeamStats = Dict{Symbol,String}(Symbol("team_id")=>"String", Symbol("total_member_count")=>"Int64", Symbol("active_member_count")=>"Int64", )
OpenAPI.property_type(::Type{ TeamStats }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TeamStats[name]))}

function check_required(o::TeamStats)
    true
end

function OpenAPI.validate_property(::Type{ TeamStats }, name::Symbol, val)
end
