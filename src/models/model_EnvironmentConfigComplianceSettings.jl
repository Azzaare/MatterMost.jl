# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""EnvironmentConfig_ComplianceSettings

    EnvironmentConfigComplianceSettings(;
        Enable=nothing,
        Directory=nothing,
        EnableDaily=nothing,
    )

    - Enable::Bool
    - Directory::Bool
    - EnableDaily::Bool
"""
Base.@kwdef mutable struct EnvironmentConfigComplianceSettings <: OpenAPI.APIModel
    Enable::Union{Nothing, Bool} = nothing
    Directory::Union{Nothing, Bool} = nothing
    EnableDaily::Union{Nothing, Bool} = nothing

    function EnvironmentConfigComplianceSettings(Enable, Directory, EnableDaily, )
        OpenAPI.validate_property(EnvironmentConfigComplianceSettings, Symbol("Enable"), Enable)
        OpenAPI.validate_property(EnvironmentConfigComplianceSettings, Symbol("Directory"), Directory)
        OpenAPI.validate_property(EnvironmentConfigComplianceSettings, Symbol("EnableDaily"), EnableDaily)
        return new(Enable, Directory, EnableDaily, )
    end
end # type EnvironmentConfigComplianceSettings

const _property_types_EnvironmentConfigComplianceSettings = Dict{Symbol,String}(Symbol("Enable")=>"Bool", Symbol("Directory")=>"Bool", Symbol("EnableDaily")=>"Bool", )
OpenAPI.property_type(::Type{ EnvironmentConfigComplianceSettings }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EnvironmentConfigComplianceSettings[name]))}

function check_required(o::EnvironmentConfigComplianceSettings)
    true
end

function OpenAPI.validate_property(::Type{ EnvironmentConfigComplianceSettings }, name::Symbol, val)
end
