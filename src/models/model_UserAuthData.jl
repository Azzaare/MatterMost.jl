# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UserAuthData

    UserAuthData(;
        auth_data=nothing,
        auth_service=nothing,
    )

    - auth_data::String : Service-specific authentication data
    - auth_service::String : The authentication service such as \&quot;email\&quot;, \&quot;gitlab\&quot;, or \&quot;ldap\&quot;
"""
Base.@kwdef mutable struct UserAuthData <: OpenAPI.APIModel
    auth_data::Union{Nothing, String} = nothing
    auth_service::Union{Nothing, String} = nothing

    function UserAuthData(auth_data, auth_service, )
        OpenAPI.validate_property(UserAuthData, Symbol("auth_data"), auth_data)
        OpenAPI.validate_property(UserAuthData, Symbol("auth_service"), auth_service)
        return new(auth_data, auth_service, )
    end
end # type UserAuthData

const _property_types_UserAuthData = Dict{Symbol,String}(Symbol("auth_data")=>"String", Symbol("auth_service")=>"String", )
OpenAPI.property_type(::Type{ UserAuthData }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UserAuthData[name]))}

function check_required(o::UserAuthData)
    o.auth_data === nothing && (return false)
    o.auth_service === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UserAuthData }, name::Symbol, val)
end
