# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CreatePost_request

    CreatePostRequest(;
        channel_id=nothing,
        message=nothing,
        root_id=nothing,
        file_ids=nothing,
        props=nothing,
    )

    - channel_id::String : The channel ID to post in
    - message::String : The message contents, can be formatted with Markdown
    - root_id::String : The post ID to comment on
    - file_ids::Vector{String} : A list of file IDs to associate with the post. Note that posts are limited to 5 files maximum. Please use additional posts for more files.
    - props::Any : A general JSON property bag to attach to the post
"""
Base.@kwdef mutable struct CreatePostRequest <: OpenAPI.APIModel
    channel_id::Union{Nothing, String} = nothing
    message::Union{Nothing, String} = nothing
    root_id::Union{Nothing, String} = nothing
    file_ids::Union{Nothing, Vector{String}} = nothing
    props::Union{Nothing, Any} = nothing

    function CreatePostRequest(channel_id, message, root_id, file_ids, props, )
        OpenAPI.validate_property(CreatePostRequest, Symbol("channel_id"), channel_id)
        OpenAPI.validate_property(CreatePostRequest, Symbol("message"), message)
        OpenAPI.validate_property(CreatePostRequest, Symbol("root_id"), root_id)
        OpenAPI.validate_property(CreatePostRequest, Symbol("file_ids"), file_ids)
        OpenAPI.validate_property(CreatePostRequest, Symbol("props"), props)
        return new(channel_id, message, root_id, file_ids, props, )
    end
end # type CreatePostRequest

const _property_types_CreatePostRequest = Dict{Symbol,String}(Symbol("channel_id")=>"String", Symbol("message")=>"String", Symbol("root_id")=>"String", Symbol("file_ids")=>"Vector{String}", Symbol("props")=>"Any", )
OpenAPI.property_type(::Type{ CreatePostRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CreatePostRequest[name]))}

function check_required(o::CreatePostRequest)
    o.channel_id === nothing && (return false)
    o.message === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CreatePostRequest }, name::Symbol, val)
end
