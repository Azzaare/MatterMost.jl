# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DataRetentionPolicyWithTeamAndChannelIds_allOf

    DataRetentionPolicyWithTeamAndChannelIdsAllOf(;
        team_ids=nothing,
        channel_ids=nothing,
    )

    - team_ids::Vector{String} : The IDs of the teams to which this policy should be applied.
    - channel_ids::Vector{String} : The IDs of the channels to which this policy should be applied.
"""
Base.@kwdef mutable struct DataRetentionPolicyWithTeamAndChannelIdsAllOf <: OpenAPI.APIModel
    team_ids::Union{Nothing, Vector{String}} = nothing
    channel_ids::Union{Nothing, Vector{String}} = nothing

    function DataRetentionPolicyWithTeamAndChannelIdsAllOf(team_ids, channel_ids, )
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelIdsAllOf, Symbol("team_ids"), team_ids)
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelIdsAllOf, Symbol("channel_ids"), channel_ids)
        return new(team_ids, channel_ids, )
    end
end # type DataRetentionPolicyWithTeamAndChannelIdsAllOf

const _property_types_DataRetentionPolicyWithTeamAndChannelIdsAllOf = Dict{Symbol,String}(Symbol("team_ids")=>"Vector{String}", Symbol("channel_ids")=>"Vector{String}", )
OpenAPI.property_type(::Type{ DataRetentionPolicyWithTeamAndChannelIdsAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DataRetentionPolicyWithTeamAndChannelIdsAllOf[name]))}

function check_required(o::DataRetentionPolicyWithTeamAndChannelIdsAllOf)
    true
end

function OpenAPI.validate_property(::Type{ DataRetentionPolicyWithTeamAndChannelIdsAllOf }, name::Symbol, val)
end
