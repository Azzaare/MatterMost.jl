# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PublishUserTyping_request

    PublishUserTypingRequest(;
        channel_id=nothing,
        parent_id=nothing,
    )

    - channel_id::String : The id of the channel to which to direct the typing event.
    - parent_id::String : The optional id of the root post of the thread to which the user is replying. If unset, the typing event is directed at the entire channel.
"""
Base.@kwdef mutable struct PublishUserTypingRequest <: OpenAPI.APIModel
    channel_id::Union{Nothing, String} = nothing
    parent_id::Union{Nothing, String} = nothing

    function PublishUserTypingRequest(channel_id, parent_id, )
        OpenAPI.validate_property(PublishUserTypingRequest, Symbol("channel_id"), channel_id)
        OpenAPI.validate_property(PublishUserTypingRequest, Symbol("parent_id"), parent_id)
        return new(channel_id, parent_id, )
    end
end # type PublishUserTypingRequest

const _property_types_PublishUserTypingRequest = Dict{Symbol,String}(Symbol("channel_id")=>"String", Symbol("parent_id")=>"String", )
OpenAPI.property_type(::Type{ PublishUserTypingRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PublishUserTypingRequest[name]))}

function check_required(o::PublishUserTypingRequest)
    o.channel_id === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ PublishUserTypingRequest }, name::Symbol, val)
end
