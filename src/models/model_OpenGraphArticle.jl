# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OpenGraph_article
Article object used in OpenGraph metadata of a webpage, if type is article

    OpenGraphArticle(;
        published_time=nothing,
        modified_time=nothing,
        expiration_time=nothing,
        section=nothing,
        tags=nothing,
        authors=nothing,
    )

    - published_time::String
    - modified_time::String
    - expiration_time::String
    - section::String
    - tags::Vector{String}
    - authors::Vector{OpenGraphArticleAuthorsInner}
"""
Base.@kwdef mutable struct OpenGraphArticle <: OpenAPI.APIModel
    published_time::Union{Nothing, String} = nothing
    modified_time::Union{Nothing, String} = nothing
    expiration_time::Union{Nothing, String} = nothing
    section::Union{Nothing, String} = nothing
    tags::Union{Nothing, Vector{String}} = nothing
    authors::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OpenGraphArticleAuthorsInner} }

    function OpenGraphArticle(published_time, modified_time, expiration_time, section, tags, authors, )
        OpenAPI.validate_property(OpenGraphArticle, Symbol("published_time"), published_time)
        OpenAPI.validate_property(OpenGraphArticle, Symbol("modified_time"), modified_time)
        OpenAPI.validate_property(OpenGraphArticle, Symbol("expiration_time"), expiration_time)
        OpenAPI.validate_property(OpenGraphArticle, Symbol("section"), section)
        OpenAPI.validate_property(OpenGraphArticle, Symbol("tags"), tags)
        OpenAPI.validate_property(OpenGraphArticle, Symbol("authors"), authors)
        return new(published_time, modified_time, expiration_time, section, tags, authors, )
    end
end # type OpenGraphArticle

const _property_types_OpenGraphArticle = Dict{Symbol,String}(Symbol("published_time")=>"String", Symbol("modified_time")=>"String", Symbol("expiration_time")=>"String", Symbol("section")=>"String", Symbol("tags")=>"Vector{String}", Symbol("authors")=>"Vector{OpenGraphArticleAuthorsInner}", )
OpenAPI.property_type(::Type{ OpenGraphArticle }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OpenGraphArticle[name]))}

function check_required(o::OpenGraphArticle)
    true
end

function OpenAPI.validate_property(::Type{ OpenGraphArticle }, name::Symbol, val)
end
