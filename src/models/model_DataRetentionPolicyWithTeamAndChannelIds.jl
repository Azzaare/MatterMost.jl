# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DataRetentionPolicyWithTeamAndChannelIds

    DataRetentionPolicyWithTeamAndChannelIds(;
        display_name=nothing,
        post_duration=nothing,
        team_ids=nothing,
        channel_ids=nothing,
    )

    - display_name::String : The display name for this retention policy.
    - post_duration::Int64 : The number of days a message will be retained before being deleted by this policy. If this value is less than 0, the policy has infinite retention (i.e. messages are never deleted). 
    - team_ids::Vector{String} : The IDs of the teams to which this policy should be applied.
    - channel_ids::Vector{String} : The IDs of the channels to which this policy should be applied.
"""
Base.@kwdef mutable struct DataRetentionPolicyWithTeamAndChannelIds <: OpenAPI.APIModel
    display_name::Union{Nothing, String} = nothing
    post_duration::Union{Nothing, Int64} = nothing
    team_ids::Union{Nothing, Vector{String}} = nothing
    channel_ids::Union{Nothing, Vector{String}} = nothing

    function DataRetentionPolicyWithTeamAndChannelIds(display_name, post_duration, team_ids, channel_ids, )
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelIds, Symbol("display_name"), display_name)
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelIds, Symbol("post_duration"), post_duration)
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelIds, Symbol("team_ids"), team_ids)
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelIds, Symbol("channel_ids"), channel_ids)
        return new(display_name, post_duration, team_ids, channel_ids, )
    end
end # type DataRetentionPolicyWithTeamAndChannelIds

const _property_types_DataRetentionPolicyWithTeamAndChannelIds = Dict{Symbol,String}(Symbol("display_name")=>"String", Symbol("post_duration")=>"Int64", Symbol("team_ids")=>"Vector{String}", Symbol("channel_ids")=>"Vector{String}", )
OpenAPI.property_type(::Type{ DataRetentionPolicyWithTeamAndChannelIds }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DataRetentionPolicyWithTeamAndChannelIds[name]))}

function check_required(o::DataRetentionPolicyWithTeamAndChannelIds)
    true
end

function OpenAPI.validate_property(::Type{ DataRetentionPolicyWithTeamAndChannelIds }, name::Symbol, val)
end
