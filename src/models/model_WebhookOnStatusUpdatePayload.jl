# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""WebhookOnStatusUpdatePayload

    WebhookOnStatusUpdatePayload(;
        id=nothing,
        name=nothing,
        description=nothing,
        is_active=nothing,
        owner_user_id=nothing,
        team_id=nothing,
        channel_id=nothing,
        create_at=nothing,
        end_at=nothing,
        delete_at=nothing,
        active_stage=nothing,
        active_stage_title=nothing,
        post_id=nothing,
        playbook_id=nothing,
        checklists=nothing,
        channel_url=nothing,
        details_url=nothing,
    )

    - id::String : A unique, 26 characters long, alphanumeric identifier for the playbook run.
    - name::String : The name of the playbook run.
    - description::String : The description of the playbook run.
    - is_active::Bool : True if the playbook run is ongoing; false if the playbook run is ended.
    - owner_user_id::String : The identifier of the user that is commanding the playbook run.
    - team_id::String : The identifier of the team where the playbook run&#39;s channel is in.
    - channel_id::String : The identifier of the playbook run&#39;s channel.
    - create_at::Int64 : The playbook run creation timestamp, formatted as the number of milliseconds since the Unix epoch.
    - end_at::Int64 : The playbook run finish timestamp, formatted as the number of milliseconds since the Unix epoch. It equals 0 if the playbook run is not finished.
    - delete_at::Int64 : The playbook run deletion timestamp, formatted as the number of milliseconds since the Unix epoch. It equals 0 if the playbook run is not deleted.
    - active_stage::Int64 : Zero-based index of the currently active stage.
    - active_stage_title::String : The title of the currently active stage.
    - post_id::String : If the playbook run was created from a post, this field contains the identifier of such post. If not, this field is empty.
    - playbook_id::String : The identifier of the playbook with from which this playbook run was created.
    - checklists::Vector{Checklist}
    - channel_url::String : Absolute URL to the playbook run&#39;s channel.
    - details_url::String : Absolute URL to the playbook run&#39;s details.
"""
Base.@kwdef mutable struct WebhookOnStatusUpdatePayload <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    is_active::Union{Nothing, Bool} = nothing
    owner_user_id::Union{Nothing, String} = nothing
    team_id::Union{Nothing, String} = nothing
    channel_id::Union{Nothing, String} = nothing
    create_at::Union{Nothing, Int64} = nothing
    end_at::Union{Nothing, Int64} = nothing
    delete_at::Union{Nothing, Int64} = nothing
    active_stage::Union{Nothing, Int64} = nothing
    active_stage_title::Union{Nothing, String} = nothing
    post_id::Union{Nothing, String} = nothing
    playbook_id::Union{Nothing, String} = nothing
    checklists::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Checklist} }
    channel_url::Union{Nothing, String} = nothing
    details_url::Union{Nothing, String} = nothing

    function WebhookOnStatusUpdatePayload(id, name, description, is_active, owner_user_id, team_id, channel_id, create_at, end_at, delete_at, active_stage, active_stage_title, post_id, playbook_id, checklists, channel_url, details_url, )
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("id"), id)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("name"), name)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("description"), description)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("is_active"), is_active)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("owner_user_id"), owner_user_id)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("team_id"), team_id)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("channel_id"), channel_id)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("create_at"), create_at)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("end_at"), end_at)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("delete_at"), delete_at)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("active_stage"), active_stage)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("active_stage_title"), active_stage_title)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("post_id"), post_id)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("playbook_id"), playbook_id)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("checklists"), checklists)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("channel_url"), channel_url)
        OpenAPI.validate_property(WebhookOnStatusUpdatePayload, Symbol("details_url"), details_url)
        return new(id, name, description, is_active, owner_user_id, team_id, channel_id, create_at, end_at, delete_at, active_stage, active_stage_title, post_id, playbook_id, checklists, channel_url, details_url, )
    end
end # type WebhookOnStatusUpdatePayload

const _property_types_WebhookOnStatusUpdatePayload = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("description")=>"String", Symbol("is_active")=>"Bool", Symbol("owner_user_id")=>"String", Symbol("team_id")=>"String", Symbol("channel_id")=>"String", Symbol("create_at")=>"Int64", Symbol("end_at")=>"Int64", Symbol("delete_at")=>"Int64", Symbol("active_stage")=>"Int64", Symbol("active_stage_title")=>"String", Symbol("post_id")=>"String", Symbol("playbook_id")=>"String", Symbol("checklists")=>"Vector{Checklist}", Symbol("channel_url")=>"String", Symbol("details_url")=>"String", )
OpenAPI.property_type(::Type{ WebhookOnStatusUpdatePayload }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_WebhookOnStatusUpdatePayload[name]))}

function check_required(o::WebhookOnStatusUpdatePayload)
    true
end

function OpenAPI.validate_property(::Type{ WebhookOnStatusUpdatePayload }, name::Symbol, val)
    if name === Symbol("create_at")
        OpenAPI.validate_param(name, "WebhookOnStatusUpdatePayload", :format, val, "int64")
    end
    if name === Symbol("end_at")
        OpenAPI.validate_param(name, "WebhookOnStatusUpdatePayload", :format, val, "int64")
    end
    if name === Symbol("delete_at")
        OpenAPI.validate_param(name, "WebhookOnStatusUpdatePayload", :format, val, "int64")
    end
    if name === Symbol("active_stage")
        OpenAPI.validate_param(name, "WebhookOnStatusUpdatePayload", :format, val, "int32")
    end
end
