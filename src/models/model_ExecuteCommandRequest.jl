# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ExecuteCommand_request

    ExecuteCommandRequest(;
        channel_id=nothing,
        command=nothing,
    )

    - channel_id::String : Channel Id where the command will execute
    - command::String : The slash command to execute, including parameters. Eg, &#x60;&#39;/echo bounces around the room&#39;&#x60;
"""
Base.@kwdef mutable struct ExecuteCommandRequest <: OpenAPI.APIModel
    channel_id::Union{Nothing, String} = nothing
    command::Union{Nothing, String} = nothing

    function ExecuteCommandRequest(channel_id, command, )
        OpenAPI.validate_property(ExecuteCommandRequest, Symbol("channel_id"), channel_id)
        OpenAPI.validate_property(ExecuteCommandRequest, Symbol("command"), command)
        return new(channel_id, command, )
    end
end # type ExecuteCommandRequest

const _property_types_ExecuteCommandRequest = Dict{Symbol,String}(Symbol("channel_id")=>"String", Symbol("command")=>"String", )
OpenAPI.property_type(::Type{ ExecuteCommandRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ExecuteCommandRequest[name]))}

function check_required(o::ExecuteCommandRequest)
    o.channel_id === nothing && (return false)
    o.command === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ExecuteCommandRequest }, name::Symbol, val)
end
