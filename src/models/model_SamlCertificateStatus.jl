# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SamlCertificateStatus

    SamlCertificateStatus(;
        idp_certificate_file=nothing,
        public_certificate_file=nothing,
        private_key_file=nothing,
    )

    - idp_certificate_file::Bool : Status is good when &#x60;true&#x60;
    - public_certificate_file::Bool : Status is good when &#x60;true&#x60;
    - private_key_file::Bool : Status is good when &#x60;true&#x60;
"""
Base.@kwdef mutable struct SamlCertificateStatus <: OpenAPI.APIModel
    idp_certificate_file::Union{Nothing, Bool} = nothing
    public_certificate_file::Union{Nothing, Bool} = nothing
    private_key_file::Union{Nothing, Bool} = nothing

    function SamlCertificateStatus(idp_certificate_file, public_certificate_file, private_key_file, )
        OpenAPI.validate_property(SamlCertificateStatus, Symbol("idp_certificate_file"), idp_certificate_file)
        OpenAPI.validate_property(SamlCertificateStatus, Symbol("public_certificate_file"), public_certificate_file)
        OpenAPI.validate_property(SamlCertificateStatus, Symbol("private_key_file"), private_key_file)
        return new(idp_certificate_file, public_certificate_file, private_key_file, )
    end
end # type SamlCertificateStatus

const _property_types_SamlCertificateStatus = Dict{Symbol,String}(Symbol("idp_certificate_file")=>"Bool", Symbol("public_certificate_file")=>"Bool", Symbol("private_key_file")=>"Bool", )
OpenAPI.property_type(::Type{ SamlCertificateStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SamlCertificateStatus[name]))}

function check_required(o::SamlCertificateStatus)
    true
end

function OpenAPI.validate_property(::Type{ SamlCertificateStatus }, name::Symbol, val)
end
