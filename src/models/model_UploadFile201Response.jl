# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UploadFile_201_response

    UploadFile201Response(;
        file_infos=nothing,
        client_ids=nothing,
    )

    - file_infos::Vector{FileInfo} : A list of file metadata that has been stored in the database
    - client_ids::Vector{String} : A list of the client_ids that were provided in the request
"""
Base.@kwdef mutable struct UploadFile201Response <: OpenAPI.APIModel
    file_infos::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{FileInfo} }
    client_ids::Union{Nothing, Vector{String}} = nothing

    function UploadFile201Response(file_infos, client_ids, )
        OpenAPI.validate_property(UploadFile201Response, Symbol("file_infos"), file_infos)
        OpenAPI.validate_property(UploadFile201Response, Symbol("client_ids"), client_ids)
        return new(file_infos, client_ids, )
    end
end # type UploadFile201Response

const _property_types_UploadFile201Response = Dict{Symbol,String}(Symbol("file_infos")=>"Vector{FileInfo}", Symbol("client_ids")=>"Vector{String}", )
OpenAPI.property_type(::Type{ UploadFile201Response }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UploadFile201Response[name]))}

function check_required(o::UploadFile201Response)
    true
end

function OpenAPI.validate_property(::Type{ UploadFile201Response }, name::Symbol, val)
end
