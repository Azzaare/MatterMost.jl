# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MigrateAuthToLdap_request

    MigrateAuthToLdapRequest(;
        from=nothing,
        match_field=nothing,
        force=nothing,
    )

    - from::String : The current authentication type for the matched users.
    - match_field::String : Foreign user field name to match.
    - force::Bool
"""
Base.@kwdef mutable struct MigrateAuthToLdapRequest <: OpenAPI.APIModel
    from::Union{Nothing, String} = nothing
    match_field::Union{Nothing, String} = nothing
    force::Union{Nothing, Bool} = nothing

    function MigrateAuthToLdapRequest(from, match_field, force, )
        OpenAPI.validate_property(MigrateAuthToLdapRequest, Symbol("from"), from)
        OpenAPI.validate_property(MigrateAuthToLdapRequest, Symbol("match_field"), match_field)
        OpenAPI.validate_property(MigrateAuthToLdapRequest, Symbol("force"), force)
        return new(from, match_field, force, )
    end
end # type MigrateAuthToLdapRequest

const _property_types_MigrateAuthToLdapRequest = Dict{Symbol,String}(Symbol("from")=>"String", Symbol("match_field")=>"String", Symbol("force")=>"Bool", )
OpenAPI.property_type(::Type{ MigrateAuthToLdapRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MigrateAuthToLdapRequest[name]))}

function check_required(o::MigrateAuthToLdapRequest)
    o.from === nothing && (return false)
    o.match_field === nothing && (return false)
    o.force === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ MigrateAuthToLdapRequest }, name::Symbol, val)
end
