# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Server_Busy

    ServerBusy(;
        busy=nothing,
        expires=nothing,
    )

    - busy::Bool : True if the server is marked as busy (under high load)
    - expires::Int64 : timestamp - number of seconds since Jan 1, 1970 UTC.
"""
Base.@kwdef mutable struct ServerBusy <: OpenAPI.APIModel
    busy::Union{Nothing, Bool} = nothing
    expires::Union{Nothing, Int64} = nothing

    function ServerBusy(busy, expires, )
        OpenAPI.validate_property(ServerBusy, Symbol("busy"), busy)
        OpenAPI.validate_property(ServerBusy, Symbol("expires"), expires)
        return new(busy, expires, )
    end
end # type ServerBusy

const _property_types_ServerBusy = Dict{Symbol,String}(Symbol("busy")=>"Bool", Symbol("expires")=>"Int64", )
OpenAPI.property_type(::Type{ ServerBusy }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ServerBusy[name]))}

function check_required(o::ServerBusy)
    true
end

function OpenAPI.validate_property(::Type{ ServerBusy }, name::Symbol, val)
    if name === Symbol("expires")
        OpenAPI.validate_param(name, "ServerBusy", :format, val, "int64")
    end
end
