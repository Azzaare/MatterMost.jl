# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SearchEmoji_request

    SearchEmojiRequest(;
        term=nothing,
        prefix_only=nothing,
    )

    - term::String : The term to match against the emoji name.
    - prefix_only::String : Set to only search for names starting with the search term.
"""
Base.@kwdef mutable struct SearchEmojiRequest <: OpenAPI.APIModel
    term::Union{Nothing, String} = nothing
    prefix_only::Union{Nothing, String} = nothing

    function SearchEmojiRequest(term, prefix_only, )
        OpenAPI.validate_property(SearchEmojiRequest, Symbol("term"), term)
        OpenAPI.validate_property(SearchEmojiRequest, Symbol("prefix_only"), prefix_only)
        return new(term, prefix_only, )
    end
end # type SearchEmojiRequest

const _property_types_SearchEmojiRequest = Dict{Symbol,String}(Symbol("term")=>"String", Symbol("prefix_only")=>"String", )
OpenAPI.property_type(::Type{ SearchEmojiRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SearchEmojiRequest[name]))}

function check_required(o::SearchEmojiRequest)
    o.term === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ SearchEmojiRequest }, name::Symbol, val)
end
