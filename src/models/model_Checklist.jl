# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Checklist

    Checklist(;
        id=nothing,
        title=nothing,
        items=nothing,
    )

    - id::String : A unique, 26 characters long, alphanumeric identifier for the checklist.
    - title::String : The title of the checklist.
    - items::Vector{ChecklistItem} : The list of tasks to do.
"""
Base.@kwdef mutable struct Checklist <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    title::Union{Nothing, String} = nothing
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ChecklistItem} }

    function Checklist(id, title, items, )
        OpenAPI.validate_property(Checklist, Symbol("id"), id)
        OpenAPI.validate_property(Checklist, Symbol("title"), title)
        OpenAPI.validate_property(Checklist, Symbol("items"), items)
        return new(id, title, items, )
    end
end # type Checklist

const _property_types_Checklist = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("title")=>"String", Symbol("items")=>"Vector{ChecklistItem}", )
OpenAPI.property_type(::Type{ Checklist }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Checklist[name]))}

function check_required(o::Checklist)
    true
end

function OpenAPI.validate_property(::Type{ Checklist }, name::Symbol, val)
end
