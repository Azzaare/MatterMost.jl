# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""PlaybookRunList

    PlaybookRunList(;
        total_count=nothing,
        page_count=nothing,
        has_more=nothing,
        items=nothing,
    )

    - total_count::Int64 : The total number of playbook runs in the list, regardless of the paging.
    - page_count::Int64 : The total number of pages. This depends on the total number of playbook runs in the database and the per_page parameter sent with the request.
    - has_more::Bool : A boolean describing whether there are more pages after the currently returned.
    - items::Vector{PlaybookRun} : The playbook runs in this page.
"""
Base.@kwdef mutable struct PlaybookRunList <: OpenAPI.APIModel
    total_count::Union{Nothing, Int64} = nothing
    page_count::Union{Nothing, Int64} = nothing
    has_more::Union{Nothing, Bool} = nothing
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{PlaybookRun} }

    function PlaybookRunList(total_count, page_count, has_more, items, )
        OpenAPI.validate_property(PlaybookRunList, Symbol("total_count"), total_count)
        OpenAPI.validate_property(PlaybookRunList, Symbol("page_count"), page_count)
        OpenAPI.validate_property(PlaybookRunList, Symbol("has_more"), has_more)
        OpenAPI.validate_property(PlaybookRunList, Symbol("items"), items)
        return new(total_count, page_count, has_more, items, )
    end
end # type PlaybookRunList

const _property_types_PlaybookRunList = Dict{Symbol,String}(Symbol("total_count")=>"Int64", Symbol("page_count")=>"Int64", Symbol("has_more")=>"Bool", Symbol("items")=>"Vector{PlaybookRun}", )
OpenAPI.property_type(::Type{ PlaybookRunList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_PlaybookRunList[name]))}

function check_required(o::PlaybookRunList)
    true
end

function OpenAPI.validate_property(::Type{ PlaybookRunList }, name::Symbol, val)
    if name === Symbol("total_count")
        OpenAPI.validate_param(name, "PlaybookRunList", :format, val, "int32")
    end
    if name === Symbol("page_count")
        OpenAPI.validate_param(name, "PlaybookRunList", :format, val, "int32")
    end
end
