# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""EnvironmentConfig_LocalizationSettings

    EnvironmentConfigLocalizationSettings(;
        DefaultServerLocale=nothing,
        DefaultClientLocale=nothing,
        AvailableLocales=nothing,
    )

    - DefaultServerLocale::Bool
    - DefaultClientLocale::Bool
    - AvailableLocales::Bool
"""
Base.@kwdef mutable struct EnvironmentConfigLocalizationSettings <: OpenAPI.APIModel
    DefaultServerLocale::Union{Nothing, Bool} = nothing
    DefaultClientLocale::Union{Nothing, Bool} = nothing
    AvailableLocales::Union{Nothing, Bool} = nothing

    function EnvironmentConfigLocalizationSettings(DefaultServerLocale, DefaultClientLocale, AvailableLocales, )
        OpenAPI.validate_property(EnvironmentConfigLocalizationSettings, Symbol("DefaultServerLocale"), DefaultServerLocale)
        OpenAPI.validate_property(EnvironmentConfigLocalizationSettings, Symbol("DefaultClientLocale"), DefaultClientLocale)
        OpenAPI.validate_property(EnvironmentConfigLocalizationSettings, Symbol("AvailableLocales"), AvailableLocales)
        return new(DefaultServerLocale, DefaultClientLocale, AvailableLocales, )
    end
end # type EnvironmentConfigLocalizationSettings

const _property_types_EnvironmentConfigLocalizationSettings = Dict{Symbol,String}(Symbol("DefaultServerLocale")=>"Bool", Symbol("DefaultClientLocale")=>"Bool", Symbol("AvailableLocales")=>"Bool", )
OpenAPI.property_type(::Type{ EnvironmentConfigLocalizationSettings }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EnvironmentConfigLocalizationSettings[name]))}

function check_required(o::EnvironmentConfigLocalizationSettings)
    true
end

function OpenAPI.validate_property(::Type{ EnvironmentConfigLocalizationSettings }, name::Symbol, val)
end
