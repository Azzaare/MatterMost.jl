# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OpenInteractiveDialog_request_dialog
Post object to create

    OpenInteractiveDialogRequestDialog(;
        callback_id=nothing,
        title=nothing,
        introduction_text=nothing,
        elements=nothing,
        submit_label=nothing,
        notify_on_cancel=nothing,
        state=nothing,
    )

    - callback_id::String : Set an ID that will be included when the dialog is submitted
    - title::String : Title of the dialog
    - introduction_text::String : Markdown formatted introductory paragraph
    - elements::Vector{Any} : Input elements, see https://docs.mattermost.com/developer/interactive-dialogs.html#elements
    - submit_label::String : Label on the submit button
    - notify_on_cancel::Bool : Set true to receive payloads when user cancels a dialog
    - state::String : Set some state to be echoed back with the dialog submission
"""
Base.@kwdef mutable struct OpenInteractiveDialogRequestDialog <: OpenAPI.APIModel
    callback_id::Union{Nothing, String} = nothing
    title::Union{Nothing, String} = nothing
    introduction_text::Union{Nothing, String} = nothing
    elements::Union{Nothing, Vector{Any}} = nothing
    submit_label::Union{Nothing, String} = nothing
    notify_on_cancel::Union{Nothing, Bool} = nothing
    state::Union{Nothing, String} = nothing

    function OpenInteractiveDialogRequestDialog(callback_id, title, introduction_text, elements, submit_label, notify_on_cancel, state, )
        OpenAPI.validate_property(OpenInteractiveDialogRequestDialog, Symbol("callback_id"), callback_id)
        OpenAPI.validate_property(OpenInteractiveDialogRequestDialog, Symbol("title"), title)
        OpenAPI.validate_property(OpenInteractiveDialogRequestDialog, Symbol("introduction_text"), introduction_text)
        OpenAPI.validate_property(OpenInteractiveDialogRequestDialog, Symbol("elements"), elements)
        OpenAPI.validate_property(OpenInteractiveDialogRequestDialog, Symbol("submit_label"), submit_label)
        OpenAPI.validate_property(OpenInteractiveDialogRequestDialog, Symbol("notify_on_cancel"), notify_on_cancel)
        OpenAPI.validate_property(OpenInteractiveDialogRequestDialog, Symbol("state"), state)
        return new(callback_id, title, introduction_text, elements, submit_label, notify_on_cancel, state, )
    end
end # type OpenInteractiveDialogRequestDialog

const _property_types_OpenInteractiveDialogRequestDialog = Dict{Symbol,String}(Symbol("callback_id")=>"String", Symbol("title")=>"String", Symbol("introduction_text")=>"String", Symbol("elements")=>"Vector{Any}", Symbol("submit_label")=>"String", Symbol("notify_on_cancel")=>"Bool", Symbol("state")=>"String", )
OpenAPI.property_type(::Type{ OpenInteractiveDialogRequestDialog }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OpenInteractiveDialogRequestDialog[name]))}

function check_required(o::OpenInteractiveDialogRequestDialog)
    o.title === nothing && (return false)
    o.elements === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OpenInteractiveDialogRequestDialog }, name::Symbol, val)
end
