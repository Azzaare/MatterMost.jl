# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SlackAttachment

    SlackAttachment(;
        Id=nothing,
        Fallback=nothing,
        Color=nothing,
        Pretext=nothing,
        AuthorName=nothing,
        AuthorLink=nothing,
        AuthorIcon=nothing,
        Title=nothing,
        TitleLink=nothing,
        Text=nothing,
        Fields=nothing,
        ImageURL=nothing,
        ThumbURL=nothing,
        Footer=nothing,
        FooterIcon=nothing,
        Timestamp=nothing,
    )

    - Id::String
    - Fallback::String
    - Color::String
    - Pretext::String
    - AuthorName::String
    - AuthorLink::String
    - AuthorIcon::String
    - Title::String
    - TitleLink::String
    - Text::String
    - Fields::Vector{SlackAttachmentField}
    - ImageURL::String
    - ThumbURL::String
    - Footer::String
    - FooterIcon::String
    - Timestamp::String : The timestamp of the slack attachment, either type of string or integer
"""
Base.@kwdef mutable struct SlackAttachment <: OpenAPI.APIModel
    Id::Union{Nothing, String} = nothing
    Fallback::Union{Nothing, String} = nothing
    Color::Union{Nothing, String} = nothing
    Pretext::Union{Nothing, String} = nothing
    AuthorName::Union{Nothing, String} = nothing
    AuthorLink::Union{Nothing, String} = nothing
    AuthorIcon::Union{Nothing, String} = nothing
    Title::Union{Nothing, String} = nothing
    TitleLink::Union{Nothing, String} = nothing
    Text::Union{Nothing, String} = nothing
    Fields::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{SlackAttachmentField} }
    ImageURL::Union{Nothing, String} = nothing
    ThumbURL::Union{Nothing, String} = nothing
    Footer::Union{Nothing, String} = nothing
    FooterIcon::Union{Nothing, String} = nothing
    Timestamp::Union{Nothing, String} = nothing

    function SlackAttachment(Id, Fallback, Color, Pretext, AuthorName, AuthorLink, AuthorIcon, Title, TitleLink, Text, Fields, ImageURL, ThumbURL, Footer, FooterIcon, Timestamp, )
        OpenAPI.validate_property(SlackAttachment, Symbol("Id"), Id)
        OpenAPI.validate_property(SlackAttachment, Symbol("Fallback"), Fallback)
        OpenAPI.validate_property(SlackAttachment, Symbol("Color"), Color)
        OpenAPI.validate_property(SlackAttachment, Symbol("Pretext"), Pretext)
        OpenAPI.validate_property(SlackAttachment, Symbol("AuthorName"), AuthorName)
        OpenAPI.validate_property(SlackAttachment, Symbol("AuthorLink"), AuthorLink)
        OpenAPI.validate_property(SlackAttachment, Symbol("AuthorIcon"), AuthorIcon)
        OpenAPI.validate_property(SlackAttachment, Symbol("Title"), Title)
        OpenAPI.validate_property(SlackAttachment, Symbol("TitleLink"), TitleLink)
        OpenAPI.validate_property(SlackAttachment, Symbol("Text"), Text)
        OpenAPI.validate_property(SlackAttachment, Symbol("Fields"), Fields)
        OpenAPI.validate_property(SlackAttachment, Symbol("ImageURL"), ImageURL)
        OpenAPI.validate_property(SlackAttachment, Symbol("ThumbURL"), ThumbURL)
        OpenAPI.validate_property(SlackAttachment, Symbol("Footer"), Footer)
        OpenAPI.validate_property(SlackAttachment, Symbol("FooterIcon"), FooterIcon)
        OpenAPI.validate_property(SlackAttachment, Symbol("Timestamp"), Timestamp)
        return new(Id, Fallback, Color, Pretext, AuthorName, AuthorLink, AuthorIcon, Title, TitleLink, Text, Fields, ImageURL, ThumbURL, Footer, FooterIcon, Timestamp, )
    end
end # type SlackAttachment

const _property_types_SlackAttachment = Dict{Symbol,String}(Symbol("Id")=>"String", Symbol("Fallback")=>"String", Symbol("Color")=>"String", Symbol("Pretext")=>"String", Symbol("AuthorName")=>"String", Symbol("AuthorLink")=>"String", Symbol("AuthorIcon")=>"String", Symbol("Title")=>"String", Symbol("TitleLink")=>"String", Symbol("Text")=>"String", Symbol("Fields")=>"Vector{SlackAttachmentField}", Symbol("ImageURL")=>"String", Symbol("ThumbURL")=>"String", Symbol("Footer")=>"String", Symbol("FooterIcon")=>"String", Symbol("Timestamp")=>"String", )
OpenAPI.property_type(::Type{ SlackAttachment }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SlackAttachment[name]))}

function check_required(o::SlackAttachment)
    true
end

function OpenAPI.validate_property(::Type{ SlackAttachment }, name::Symbol, val)
end
