# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""EnvironmentConfig_ClusterSettings

    EnvironmentConfigClusterSettings(;
        Enable=nothing,
        InterNodeListenAddress=nothing,
        InterNodeUrls=nothing,
    )

    - Enable::Bool
    - InterNodeListenAddress::Bool
    - InterNodeUrls::Bool
"""
Base.@kwdef mutable struct EnvironmentConfigClusterSettings <: OpenAPI.APIModel
    Enable::Union{Nothing, Bool} = nothing
    InterNodeListenAddress::Union{Nothing, Bool} = nothing
    InterNodeUrls::Union{Nothing, Bool} = nothing

    function EnvironmentConfigClusterSettings(Enable, InterNodeListenAddress, InterNodeUrls, )
        OpenAPI.validate_property(EnvironmentConfigClusterSettings, Symbol("Enable"), Enable)
        OpenAPI.validate_property(EnvironmentConfigClusterSettings, Symbol("InterNodeListenAddress"), InterNodeListenAddress)
        OpenAPI.validate_property(EnvironmentConfigClusterSettings, Symbol("InterNodeUrls"), InterNodeUrls)
        return new(Enable, InterNodeListenAddress, InterNodeUrls, )
    end
end # type EnvironmentConfigClusterSettings

const _property_types_EnvironmentConfigClusterSettings = Dict{Symbol,String}(Symbol("Enable")=>"Bool", Symbol("InterNodeListenAddress")=>"Bool", Symbol("InterNodeUrls")=>"Bool", )
OpenAPI.property_type(::Type{ EnvironmentConfigClusterSettings }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EnvironmentConfigClusterSettings[name]))}

function check_required(o::EnvironmentConfigClusterSettings)
    true
end

function OpenAPI.validate_property(::Type{ EnvironmentConfigClusterSettings }, name::Symbol, val)
end
