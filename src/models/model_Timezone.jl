# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Timezone

    Timezone(;
        useAutomaticTimezone=nothing,
        manualTimezone=nothing,
        automaticTimezone=nothing,
    )

    - useAutomaticTimezone::Bool : Set to \&quot;true\&quot; to use the browser/system timezone, \&quot;false\&quot; to set manually. Defaults to \&quot;true\&quot;.
    - manualTimezone::String : Value when setting manually the timezone, i.e. \&quot;Europe/Berlin\&quot;.
    - automaticTimezone::String : This value is set automatically when the \&quot;useAutomaticTimezone\&quot; is set to \&quot;true\&quot;.
"""
Base.@kwdef mutable struct Timezone <: OpenAPI.APIModel
    useAutomaticTimezone::Union{Nothing, Bool} = nothing
    manualTimezone::Union{Nothing, String} = nothing
    automaticTimezone::Union{Nothing, String} = nothing

    function Timezone(useAutomaticTimezone, manualTimezone, automaticTimezone, )
        OpenAPI.validate_property(Timezone, Symbol("useAutomaticTimezone"), useAutomaticTimezone)
        OpenAPI.validate_property(Timezone, Symbol("manualTimezone"), manualTimezone)
        OpenAPI.validate_property(Timezone, Symbol("automaticTimezone"), automaticTimezone)
        return new(useAutomaticTimezone, manualTimezone, automaticTimezone, )
    end
end # type Timezone

const _property_types_Timezone = Dict{Symbol,String}(Symbol("useAutomaticTimezone")=>"Bool", Symbol("manualTimezone")=>"String", Symbol("automaticTimezone")=>"String", )
OpenAPI.property_type(::Type{ Timezone }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Timezone[name]))}

function check_required(o::Timezone)
    true
end

function OpenAPI.validate_property(::Type{ Timezone }, name::Symbol, val)
end
