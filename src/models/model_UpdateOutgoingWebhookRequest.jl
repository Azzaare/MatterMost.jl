# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateOutgoingWebhook_request

    UpdateOutgoingWebhookRequest(;
        id=nothing,
        channel_id=nothing,
        display_name=nothing,
        description=nothing,
    )

    - id::String : Outgoing webhook GUID
    - channel_id::String : The ID of a public channel or private group that receives the webhook payloads.
    - display_name::String : The display name for this incoming webhook
    - description::String : The description for this incoming webhook
"""
Base.@kwdef mutable struct UpdateOutgoingWebhookRequest <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    channel_id::Union{Nothing, String} = nothing
    display_name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing

    function UpdateOutgoingWebhookRequest(id, channel_id, display_name, description, )
        OpenAPI.validate_property(UpdateOutgoingWebhookRequest, Symbol("id"), id)
        OpenAPI.validate_property(UpdateOutgoingWebhookRequest, Symbol("channel_id"), channel_id)
        OpenAPI.validate_property(UpdateOutgoingWebhookRequest, Symbol("display_name"), display_name)
        OpenAPI.validate_property(UpdateOutgoingWebhookRequest, Symbol("description"), description)
        return new(id, channel_id, display_name, description, )
    end
end # type UpdateOutgoingWebhookRequest

const _property_types_UpdateOutgoingWebhookRequest = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("channel_id")=>"String", Symbol("display_name")=>"String", Symbol("description")=>"String", )
OpenAPI.property_type(::Type{ UpdateOutgoingWebhookRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateOutgoingWebhookRequest[name]))}

function check_required(o::UpdateOutgoingWebhookRequest)
    o.id === nothing && (return false)
    o.channel_id === nothing && (return false)
    o.display_name === nothing && (return false)
    o.description === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdateOutgoingWebhookRequest }, name::Symbol, val)
end
