# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""MarketplacePlugin

    MarketplacePlugin(;
        homepage_url=nothing,
        icon_data=nothing,
        download_url=nothing,
        release_notes_url=nothing,
        labels=nothing,
        signature=nothing,
        manifest=nothing,
        installed_version=nothing,
    )

    - homepage_url::String : URL that leads to the homepage of the plugin.
    - icon_data::String : Base64 encoding of a plugin icon SVG.
    - download_url::String : URL to download the plugin.
    - release_notes_url::String : URL that leads to the release notes of the plugin.
    - labels::Vector{String} : A list of the plugin labels.
    - signature::String : Base64 encoded signature of the plugin.
    - manifest::PluginManifest
    - installed_version::String : Version number of the already installed plugin, if any.
"""
Base.@kwdef mutable struct MarketplacePlugin <: OpenAPI.APIModel
    homepage_url::Union{Nothing, String} = nothing
    icon_data::Union{Nothing, String} = nothing
    download_url::Union{Nothing, String} = nothing
    release_notes_url::Union{Nothing, String} = nothing
    labels::Union{Nothing, Vector{String}} = nothing
    signature::Union{Nothing, String} = nothing
    manifest = nothing # spec type: Union{ Nothing, PluginManifest }
    installed_version::Union{Nothing, String} = nothing

    function MarketplacePlugin(homepage_url, icon_data, download_url, release_notes_url, labels, signature, manifest, installed_version, )
        OpenAPI.validate_property(MarketplacePlugin, Symbol("homepage_url"), homepage_url)
        OpenAPI.validate_property(MarketplacePlugin, Symbol("icon_data"), icon_data)
        OpenAPI.validate_property(MarketplacePlugin, Symbol("download_url"), download_url)
        OpenAPI.validate_property(MarketplacePlugin, Symbol("release_notes_url"), release_notes_url)
        OpenAPI.validate_property(MarketplacePlugin, Symbol("labels"), labels)
        OpenAPI.validate_property(MarketplacePlugin, Symbol("signature"), signature)
        OpenAPI.validate_property(MarketplacePlugin, Symbol("manifest"), manifest)
        OpenAPI.validate_property(MarketplacePlugin, Symbol("installed_version"), installed_version)
        return new(homepage_url, icon_data, download_url, release_notes_url, labels, signature, manifest, installed_version, )
    end
end # type MarketplacePlugin

const _property_types_MarketplacePlugin = Dict{Symbol,String}(Symbol("homepage_url")=>"String", Symbol("icon_data")=>"String", Symbol("download_url")=>"String", Symbol("release_notes_url")=>"String", Symbol("labels")=>"Vector{String}", Symbol("signature")=>"String", Symbol("manifest")=>"PluginManifest", Symbol("installed_version")=>"String", )
OpenAPI.property_type(::Type{ MarketplacePlugin }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MarketplacePlugin[name]))}

function check_required(o::MarketplacePlugin)
    true
end

function OpenAPI.validate_property(::Type{ MarketplacePlugin }, name::Symbol, val)
end
