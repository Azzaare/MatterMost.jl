# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""InvoiceLineItem

    InvoiceLineItem(;
        price_id=nothing,
        total=nothing,
        quantity=nothing,
        price_per_unit=nothing,
        description=nothing,
        metadata=nothing,
    )

    - price_id::String
    - total::Int64
    - quantity::Int64
    - price_per_unit::Int64
    - description::String
    - metadata::Vector{String}
"""
Base.@kwdef mutable struct InvoiceLineItem <: OpenAPI.APIModel
    price_id::Union{Nothing, String} = nothing
    total::Union{Nothing, Int64} = nothing
    quantity::Union{Nothing, Int64} = nothing
    price_per_unit::Union{Nothing, Int64} = nothing
    description::Union{Nothing, String} = nothing
    metadata::Union{Nothing, Vector{String}} = nothing

    function InvoiceLineItem(price_id, total, quantity, price_per_unit, description, metadata, )
        OpenAPI.validate_property(InvoiceLineItem, Symbol("price_id"), price_id)
        OpenAPI.validate_property(InvoiceLineItem, Symbol("total"), total)
        OpenAPI.validate_property(InvoiceLineItem, Symbol("quantity"), quantity)
        OpenAPI.validate_property(InvoiceLineItem, Symbol("price_per_unit"), price_per_unit)
        OpenAPI.validate_property(InvoiceLineItem, Symbol("description"), description)
        OpenAPI.validate_property(InvoiceLineItem, Symbol("metadata"), metadata)
        return new(price_id, total, quantity, price_per_unit, description, metadata, )
    end
end # type InvoiceLineItem

const _property_types_InvoiceLineItem = Dict{Symbol,String}(Symbol("price_id")=>"String", Symbol("total")=>"Int64", Symbol("quantity")=>"Int64", Symbol("price_per_unit")=>"Int64", Symbol("description")=>"String", Symbol("metadata")=>"Vector{String}", )
OpenAPI.property_type(::Type{ InvoiceLineItem }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_InvoiceLineItem[name]))}

function check_required(o::InvoiceLineItem)
    true
end

function OpenAPI.validate_property(::Type{ InvoiceLineItem }, name::Symbol, val)
    if name === Symbol("total")
        OpenAPI.validate_param(name, "InvoiceLineItem", :format, val, "int64")
    end
    if name === Symbol("quantity")
        OpenAPI.validate_param(name, "InvoiceLineItem", :format, val, "int64")
    end
    if name === Symbol("price_per_unit")
        OpenAPI.validate_param(name, "InvoiceLineItem", :format, val, "int64")
    end
end
