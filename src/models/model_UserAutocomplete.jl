# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UserAutocomplete

    UserAutocomplete(;
        users=nothing,
        out_of_channel=nothing,
    )

    - users::Vector{User} : A list of users that are the main result of the query
    - out_of_channel::Vector{User} : A special case list of users returned when autocompleting in a specific channel. Omitted when empty or not relevant
"""
Base.@kwdef mutable struct UserAutocomplete <: OpenAPI.APIModel
    users::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{User} }
    out_of_channel::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{User} }

    function UserAutocomplete(users, out_of_channel, )
        OpenAPI.validate_property(UserAutocomplete, Symbol("users"), users)
        OpenAPI.validate_property(UserAutocomplete, Symbol("out_of_channel"), out_of_channel)
        return new(users, out_of_channel, )
    end
end # type UserAutocomplete

const _property_types_UserAutocomplete = Dict{Symbol,String}(Symbol("users")=>"Vector{User}", Symbol("out_of_channel")=>"Vector{User}", )
OpenAPI.property_type(::Type{ UserAutocomplete }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UserAutocomplete[name]))}

function check_required(o::UserAutocomplete)
    true
end

function OpenAPI.validate_property(::Type{ UserAutocomplete }, name::Symbol, val)
end
