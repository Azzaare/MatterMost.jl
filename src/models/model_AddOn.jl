# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AddOn

    AddOn(;
        id=nothing,
        name=nothing,
        display_name=nothing,
        price_per_seat=nothing,
    )

    - id::String
    - name::String
    - display_name::String
    - price_per_seat::String
"""
Base.@kwdef mutable struct AddOn <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    display_name::Union{Nothing, String} = nothing
    price_per_seat::Union{Nothing, String} = nothing

    function AddOn(id, name, display_name, price_per_seat, )
        OpenAPI.validate_property(AddOn, Symbol("id"), id)
        OpenAPI.validate_property(AddOn, Symbol("name"), name)
        OpenAPI.validate_property(AddOn, Symbol("display_name"), display_name)
        OpenAPI.validate_property(AddOn, Symbol("price_per_seat"), price_per_seat)
        return new(id, name, display_name, price_per_seat, )
    end
end # type AddOn

const _property_types_AddOn = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("display_name")=>"String", Symbol("price_per_seat")=>"String", )
OpenAPI.property_type(::Type{ AddOn }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AddOn[name]))}

function check_required(o::AddOn)
    true
end

function OpenAPI.validate_property(::Type{ AddOn }, name::Symbol, val)
end
