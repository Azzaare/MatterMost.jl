# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Bot
A bot account

    Bot(;
        user_id=nothing,
        create_at=nothing,
        update_at=nothing,
        delete_at=nothing,
        username=nothing,
        display_name=nothing,
        description=nothing,
        owner_id=nothing,
    )

    - user_id::String : The user id of the associated user entry.
    - create_at::Int64 : The time in milliseconds a bot was created
    - update_at::Int64 : The time in milliseconds a bot was last updated
    - delete_at::Int64 : The time in milliseconds a bot was deleted
    - username::String
    - display_name::String
    - description::String
    - owner_id::String : The user id of the user that currently owns this bot.
"""
Base.@kwdef mutable struct Bot <: OpenAPI.APIModel
    user_id::Union{Nothing, String} = nothing
    create_at::Union{Nothing, Int64} = nothing
    update_at::Union{Nothing, Int64} = nothing
    delete_at::Union{Nothing, Int64} = nothing
    username::Union{Nothing, String} = nothing
    display_name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    owner_id::Union{Nothing, String} = nothing

    function Bot(user_id, create_at, update_at, delete_at, username, display_name, description, owner_id, )
        OpenAPI.validate_property(Bot, Symbol("user_id"), user_id)
        OpenAPI.validate_property(Bot, Symbol("create_at"), create_at)
        OpenAPI.validate_property(Bot, Symbol("update_at"), update_at)
        OpenAPI.validate_property(Bot, Symbol("delete_at"), delete_at)
        OpenAPI.validate_property(Bot, Symbol("username"), username)
        OpenAPI.validate_property(Bot, Symbol("display_name"), display_name)
        OpenAPI.validate_property(Bot, Symbol("description"), description)
        OpenAPI.validate_property(Bot, Symbol("owner_id"), owner_id)
        return new(user_id, create_at, update_at, delete_at, username, display_name, description, owner_id, )
    end
end # type Bot

const _property_types_Bot = Dict{Symbol,String}(Symbol("user_id")=>"String", Symbol("create_at")=>"Int64", Symbol("update_at")=>"Int64", Symbol("delete_at")=>"Int64", Symbol("username")=>"String", Symbol("display_name")=>"String", Symbol("description")=>"String", Symbol("owner_id")=>"String", )
OpenAPI.property_type(::Type{ Bot }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Bot[name]))}

function check_required(o::Bot)
    true
end

function OpenAPI.validate_property(::Type{ Bot }, name::Symbol, val)
    if name === Symbol("create_at")
        OpenAPI.validate_param(name, "Bot", :format, val, "int64")
    end
    if name === Symbol("update_at")
        OpenAPI.validate_param(name, "Bot", :format, val, "int64")
    end
    if name === Symbol("delete_at")
        OpenAPI.validate_param(name, "Bot", :format, val, "int64")
    end
end
