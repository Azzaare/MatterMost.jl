# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UpdateUserStatus_request

    UpdateUserStatusRequest(;
        user_id=nothing,
        status=nothing,
        dnd_end_time=nothing,
    )

    - user_id::String : User ID
    - status::String : User status, can be &#x60;online&#x60;, &#x60;away&#x60;, &#x60;offline&#x60; and &#x60;dnd&#x60;
    - dnd_end_time::Int64 : Time in epoch seconds at which a dnd status would be unset.
"""
Base.@kwdef mutable struct UpdateUserStatusRequest <: OpenAPI.APIModel
    user_id::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    dnd_end_time::Union{Nothing, Int64} = nothing

    function UpdateUserStatusRequest(user_id, status, dnd_end_time, )
        OpenAPI.validate_property(UpdateUserStatusRequest, Symbol("user_id"), user_id)
        OpenAPI.validate_property(UpdateUserStatusRequest, Symbol("status"), status)
        OpenAPI.validate_property(UpdateUserStatusRequest, Symbol("dnd_end_time"), dnd_end_time)
        return new(user_id, status, dnd_end_time, )
    end
end # type UpdateUserStatusRequest

const _property_types_UpdateUserStatusRequest = Dict{Symbol,String}(Symbol("user_id")=>"String", Symbol("status")=>"String", Symbol("dnd_end_time")=>"Int64", )
OpenAPI.property_type(::Type{ UpdateUserStatusRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UpdateUserStatusRequest[name]))}

function check_required(o::UpdateUserStatusRequest)
    o.user_id === nothing && (return false)
    o.status === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ UpdateUserStatusRequest }, name::Symbol, val)
end
