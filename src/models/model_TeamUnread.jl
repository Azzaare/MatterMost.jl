# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""TeamUnread

    TeamUnread(;
        team_id=nothing,
        msg_count=nothing,
        mention_count=nothing,
    )

    - team_id::String
    - msg_count::Int64
    - mention_count::Int64
"""
Base.@kwdef mutable struct TeamUnread <: OpenAPI.APIModel
    team_id::Union{Nothing, String} = nothing
    msg_count::Union{Nothing, Int64} = nothing
    mention_count::Union{Nothing, Int64} = nothing

    function TeamUnread(team_id, msg_count, mention_count, )
        OpenAPI.validate_property(TeamUnread, Symbol("team_id"), team_id)
        OpenAPI.validate_property(TeamUnread, Symbol("msg_count"), msg_count)
        OpenAPI.validate_property(TeamUnread, Symbol("mention_count"), mention_count)
        return new(team_id, msg_count, mention_count, )
    end
end # type TeamUnread

const _property_types_TeamUnread = Dict{Symbol,String}(Symbol("team_id")=>"String", Symbol("msg_count")=>"Int64", Symbol("mention_count")=>"Int64", )
OpenAPI.property_type(::Type{ TeamUnread }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_TeamUnread[name]))}

function check_required(o::TeamUnread)
    true
end

function OpenAPI.validate_property(::Type{ TeamUnread }, name::Symbol, val)
end
