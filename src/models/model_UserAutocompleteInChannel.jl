# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""UserAutocompleteInChannel

    UserAutocompleteInChannel(;
        in_channel=nothing,
        out_of_channel=nothing,
    )

    - in_channel::Vector{User} : A list of user objects in the channel
    - out_of_channel::Vector{User} : A list of user objects not in the channel
"""
Base.@kwdef mutable struct UserAutocompleteInChannel <: OpenAPI.APIModel
    in_channel::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{User} }
    out_of_channel::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{User} }

    function UserAutocompleteInChannel(in_channel, out_of_channel, )
        OpenAPI.validate_property(UserAutocompleteInChannel, Symbol("in_channel"), in_channel)
        OpenAPI.validate_property(UserAutocompleteInChannel, Symbol("out_of_channel"), out_of_channel)
        return new(in_channel, out_of_channel, )
    end
end # type UserAutocompleteInChannel

const _property_types_UserAutocompleteInChannel = Dict{Symbol,String}(Symbol("in_channel")=>"Vector{User}", Symbol("out_of_channel")=>"Vector{User}", )
OpenAPI.property_type(::Type{ UserAutocompleteInChannel }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_UserAutocompleteInChannel[name]))}

function check_required(o::UserAutocompleteInChannel)
    true
end

function OpenAPI.validate_property(::Type{ UserAutocompleteInChannel }, name::Symbol, val)
end
