# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DataRetentionPolicyWithTeamAndChannelCounts

    DataRetentionPolicyWithTeamAndChannelCounts(;
        display_name=nothing,
        post_duration=nothing,
        id=nothing,
        team_count=nothing,
        channel_count=nothing,
    )

    - display_name::String : The display name for this retention policy.
    - post_duration::Int64 : The number of days a message will be retained before being deleted by this policy. If this value is less than 0, the policy has infinite retention (i.e. messages are never deleted). 
    - id::String : The ID of this retention policy.
    - team_count::Int64 : The number of teams to which this policy is applied.
    - channel_count::Int64 : The number of channels to which this policy is applied.
"""
Base.@kwdef mutable struct DataRetentionPolicyWithTeamAndChannelCounts <: OpenAPI.APIModel
    display_name::Union{Nothing, String} = nothing
    post_duration::Union{Nothing, Int64} = nothing
    id::Union{Nothing, String} = nothing
    team_count::Union{Nothing, Int64} = nothing
    channel_count::Union{Nothing, Int64} = nothing

    function DataRetentionPolicyWithTeamAndChannelCounts(display_name, post_duration, id, team_count, channel_count, )
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelCounts, Symbol("display_name"), display_name)
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelCounts, Symbol("post_duration"), post_duration)
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelCounts, Symbol("id"), id)
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelCounts, Symbol("team_count"), team_count)
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelCounts, Symbol("channel_count"), channel_count)
        return new(display_name, post_duration, id, team_count, channel_count, )
    end
end # type DataRetentionPolicyWithTeamAndChannelCounts

const _property_types_DataRetentionPolicyWithTeamAndChannelCounts = Dict{Symbol,String}(Symbol("display_name")=>"String", Symbol("post_duration")=>"Int64", Symbol("id")=>"String", Symbol("team_count")=>"Int64", Symbol("channel_count")=>"Int64", )
OpenAPI.property_type(::Type{ DataRetentionPolicyWithTeamAndChannelCounts }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DataRetentionPolicyWithTeamAndChannelCounts[name]))}

function check_required(o::DataRetentionPolicyWithTeamAndChannelCounts)
    true
end

function OpenAPI.validate_property(::Type{ DataRetentionPolicyWithTeamAndChannelCounts }, name::Symbol, val)
end
