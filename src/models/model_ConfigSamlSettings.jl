# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Config_SamlSettings

    ConfigSamlSettings(;
        Enable=nothing,
        Verify=nothing,
        Encrypt=nothing,
        IdpUrl=nothing,
        IdpDescriptorUrl=nothing,
        AssertionConsumerServiceURL=nothing,
        IdpCertificateFile=nothing,
        PublicCertificateFile=nothing,
        PrivateKeyFile=nothing,
        FirstNameAttribute=nothing,
        LastNameAttribute=nothing,
        EmailAttribute=nothing,
        UsernameAttribute=nothing,
        NicknameAttribute=nothing,
        LocaleAttribute=nothing,
        PositionAttribute=nothing,
        LoginButtonText=nothing,
    )

    - Enable::Bool
    - Verify::Bool
    - Encrypt::Bool
    - IdpUrl::String
    - IdpDescriptorUrl::String
    - AssertionConsumerServiceURL::String
    - IdpCertificateFile::String
    - PublicCertificateFile::String
    - PrivateKeyFile::String
    - FirstNameAttribute::String
    - LastNameAttribute::String
    - EmailAttribute::String
    - UsernameAttribute::String
    - NicknameAttribute::String
    - LocaleAttribute::String
    - PositionAttribute::String
    - LoginButtonText::String
"""
Base.@kwdef mutable struct ConfigSamlSettings <: OpenAPI.APIModel
    Enable::Union{Nothing, Bool} = nothing
    Verify::Union{Nothing, Bool} = nothing
    Encrypt::Union{Nothing, Bool} = nothing
    IdpUrl::Union{Nothing, String} = nothing
    IdpDescriptorUrl::Union{Nothing, String} = nothing
    AssertionConsumerServiceURL::Union{Nothing, String} = nothing
    IdpCertificateFile::Union{Nothing, String} = nothing
    PublicCertificateFile::Union{Nothing, String} = nothing
    PrivateKeyFile::Union{Nothing, String} = nothing
    FirstNameAttribute::Union{Nothing, String} = nothing
    LastNameAttribute::Union{Nothing, String} = nothing
    EmailAttribute::Union{Nothing, String} = nothing
    UsernameAttribute::Union{Nothing, String} = nothing
    NicknameAttribute::Union{Nothing, String} = nothing
    LocaleAttribute::Union{Nothing, String} = nothing
    PositionAttribute::Union{Nothing, String} = nothing
    LoginButtonText::Union{Nothing, String} = nothing

    function ConfigSamlSettings(Enable, Verify, Encrypt, IdpUrl, IdpDescriptorUrl, AssertionConsumerServiceURL, IdpCertificateFile, PublicCertificateFile, PrivateKeyFile, FirstNameAttribute, LastNameAttribute, EmailAttribute, UsernameAttribute, NicknameAttribute, LocaleAttribute, PositionAttribute, LoginButtonText, )
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("Enable"), Enable)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("Verify"), Verify)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("Encrypt"), Encrypt)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("IdpUrl"), IdpUrl)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("IdpDescriptorUrl"), IdpDescriptorUrl)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("AssertionConsumerServiceURL"), AssertionConsumerServiceURL)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("IdpCertificateFile"), IdpCertificateFile)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("PublicCertificateFile"), PublicCertificateFile)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("PrivateKeyFile"), PrivateKeyFile)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("FirstNameAttribute"), FirstNameAttribute)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("LastNameAttribute"), LastNameAttribute)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("EmailAttribute"), EmailAttribute)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("UsernameAttribute"), UsernameAttribute)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("NicknameAttribute"), NicknameAttribute)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("LocaleAttribute"), LocaleAttribute)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("PositionAttribute"), PositionAttribute)
        OpenAPI.validate_property(ConfigSamlSettings, Symbol("LoginButtonText"), LoginButtonText)
        return new(Enable, Verify, Encrypt, IdpUrl, IdpDescriptorUrl, AssertionConsumerServiceURL, IdpCertificateFile, PublicCertificateFile, PrivateKeyFile, FirstNameAttribute, LastNameAttribute, EmailAttribute, UsernameAttribute, NicknameAttribute, LocaleAttribute, PositionAttribute, LoginButtonText, )
    end
end # type ConfigSamlSettings

const _property_types_ConfigSamlSettings = Dict{Symbol,String}(Symbol("Enable")=>"Bool", Symbol("Verify")=>"Bool", Symbol("Encrypt")=>"Bool", Symbol("IdpUrl")=>"String", Symbol("IdpDescriptorUrl")=>"String", Symbol("AssertionConsumerServiceURL")=>"String", Symbol("IdpCertificateFile")=>"String", Symbol("PublicCertificateFile")=>"String", Symbol("PrivateKeyFile")=>"String", Symbol("FirstNameAttribute")=>"String", Symbol("LastNameAttribute")=>"String", Symbol("EmailAttribute")=>"String", Symbol("UsernameAttribute")=>"String", Symbol("NicknameAttribute")=>"String", Symbol("LocaleAttribute")=>"String", Symbol("PositionAttribute")=>"String", Symbol("LoginButtonText")=>"String", )
OpenAPI.property_type(::Type{ ConfigSamlSettings }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ConfigSamlSettings[name]))}

function check_required(o::ConfigSamlSettings)
    true
end

function OpenAPI.validate_property(::Type{ ConfigSamlSettings }, name::Symbol, val)
end
