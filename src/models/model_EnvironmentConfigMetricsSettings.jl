# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""EnvironmentConfig_MetricsSettings

    EnvironmentConfigMetricsSettings(;
        Enable=nothing,
        BlockProfileRate=nothing,
        ListenAddress=nothing,
    )

    - Enable::Bool
    - BlockProfileRate::Bool
    - ListenAddress::Bool
"""
Base.@kwdef mutable struct EnvironmentConfigMetricsSettings <: OpenAPI.APIModel
    Enable::Union{Nothing, Bool} = nothing
    BlockProfileRate::Union{Nothing, Bool} = nothing
    ListenAddress::Union{Nothing, Bool} = nothing

    function EnvironmentConfigMetricsSettings(Enable, BlockProfileRate, ListenAddress, )
        OpenAPI.validate_property(EnvironmentConfigMetricsSettings, Symbol("Enable"), Enable)
        OpenAPI.validate_property(EnvironmentConfigMetricsSettings, Symbol("BlockProfileRate"), BlockProfileRate)
        OpenAPI.validate_property(EnvironmentConfigMetricsSettings, Symbol("ListenAddress"), ListenAddress)
        return new(Enable, BlockProfileRate, ListenAddress, )
    end
end # type EnvironmentConfigMetricsSettings

const _property_types_EnvironmentConfigMetricsSettings = Dict{Symbol,String}(Symbol("Enable")=>"Bool", Symbol("BlockProfileRate")=>"Bool", Symbol("ListenAddress")=>"Bool", )
OpenAPI.property_type(::Type{ EnvironmentConfigMetricsSettings }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_EnvironmentConfigMetricsSettings[name]))}

function check_required(o::EnvironmentConfigMetricsSettings)
    true
end

function OpenAPI.validate_property(::Type{ EnvironmentConfigMetricsSettings }, name::Symbol, val)
end
