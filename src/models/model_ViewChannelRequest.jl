# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ViewChannel_request

    ViewChannelRequest(;
        channel_id=nothing,
        prev_channel_id=nothing,
    )

    - channel_id::String : The channel ID that is being viewed. Use a blank string to indicate that all channels have lost focus.
    - prev_channel_id::String : The channel ID of the previous channel, used when switching channels. Providing this ID will cause push notifications to clear on the channel being switched to.
"""
Base.@kwdef mutable struct ViewChannelRequest <: OpenAPI.APIModel
    channel_id::Union{Nothing, String} = nothing
    prev_channel_id::Union{Nothing, String} = nothing

    function ViewChannelRequest(channel_id, prev_channel_id, )
        OpenAPI.validate_property(ViewChannelRequest, Symbol("channel_id"), channel_id)
        OpenAPI.validate_property(ViewChannelRequest, Symbol("prev_channel_id"), prev_channel_id)
        return new(channel_id, prev_channel_id, )
    end
end # type ViewChannelRequest

const _property_types_ViewChannelRequest = Dict{Symbol,String}(Symbol("channel_id")=>"String", Symbol("prev_channel_id")=>"String", )
OpenAPI.property_type(::Type{ ViewChannelRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ViewChannelRequest[name]))}

function check_required(o::ViewChannelRequest)
    o.channel_id === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ViewChannelRequest }, name::Symbol, val)
end
