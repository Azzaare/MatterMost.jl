# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AutocompleteSuggestion

    AutocompleteSuggestion(;
        Complete=nothing,
        Suggestion=nothing,
        Hint=nothing,
        Description=nothing,
        IconData=nothing,
    )

    - Complete::String : Completed suggestion
    - Suggestion::String : Predicted text user might want to input
    - Hint::String : Hint about suggested input
    - Description::String : Description of the suggested command
    - IconData::String : Base64 encoded svg image
"""
Base.@kwdef mutable struct AutocompleteSuggestion <: OpenAPI.APIModel
    Complete::Union{Nothing, String} = nothing
    Suggestion::Union{Nothing, String} = nothing
    Hint::Union{Nothing, String} = nothing
    Description::Union{Nothing, String} = nothing
    IconData::Union{Nothing, String} = nothing

    function AutocompleteSuggestion(Complete, Suggestion, Hint, Description, IconData, )
        OpenAPI.validate_property(AutocompleteSuggestion, Symbol("Complete"), Complete)
        OpenAPI.validate_property(AutocompleteSuggestion, Symbol("Suggestion"), Suggestion)
        OpenAPI.validate_property(AutocompleteSuggestion, Symbol("Hint"), Hint)
        OpenAPI.validate_property(AutocompleteSuggestion, Symbol("Description"), Description)
        OpenAPI.validate_property(AutocompleteSuggestion, Symbol("IconData"), IconData)
        return new(Complete, Suggestion, Hint, Description, IconData, )
    end
end # type AutocompleteSuggestion

const _property_types_AutocompleteSuggestion = Dict{Symbol,String}(Symbol("Complete")=>"String", Symbol("Suggestion")=>"String", Symbol("Hint")=>"String", Symbol("Description")=>"String", Symbol("IconData")=>"String", )
OpenAPI.property_type(::Type{ AutocompleteSuggestion }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AutocompleteSuggestion[name]))}

function check_required(o::AutocompleteSuggestion)
    true
end

function OpenAPI.validate_property(::Type{ AutocompleteSuggestion }, name::Symbol, val)
end
