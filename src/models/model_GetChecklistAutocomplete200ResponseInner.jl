# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""getChecklistAutocomplete_200_response_inner

    GetChecklistAutocomplete200ResponseInner(;
        item=nothing,
        hint=nothing,
        helptext=nothing,
    )

    - item::String : A string containing a pair of integers separated by a space. The first integer is the index of the checklist; the second is the index of the item within the checklist.
    - hint::String : The title of the corresponding item.
    - helptext::String : Always the value \&quot;Check/uncheck this item\&quot;.
"""
Base.@kwdef mutable struct GetChecklistAutocomplete200ResponseInner <: OpenAPI.APIModel
    item::Union{Nothing, String} = nothing
    hint::Union{Nothing, String} = nothing
    helptext::Union{Nothing, String} = nothing

    function GetChecklistAutocomplete200ResponseInner(item, hint, helptext, )
        OpenAPI.validate_property(GetChecklistAutocomplete200ResponseInner, Symbol("item"), item)
        OpenAPI.validate_property(GetChecklistAutocomplete200ResponseInner, Symbol("hint"), hint)
        OpenAPI.validate_property(GetChecklistAutocomplete200ResponseInner, Symbol("helptext"), helptext)
        return new(item, hint, helptext, )
    end
end # type GetChecklistAutocomplete200ResponseInner

const _property_types_GetChecklistAutocomplete200ResponseInner = Dict{Symbol,String}(Symbol("item")=>"String", Symbol("hint")=>"String", Symbol("helptext")=>"String", )
OpenAPI.property_type(::Type{ GetChecklistAutocomplete200ResponseInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_GetChecklistAutocomplete200ResponseInner[name]))}

function check_required(o::GetChecklistAutocomplete200ResponseInner)
    o.item === nothing && (return false)
    o.hint === nothing && (return false)
    o.helptext === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ GetChecklistAutocomplete200ResponseInner }, name::Symbol, val)
end
