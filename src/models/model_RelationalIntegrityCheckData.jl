# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""RelationalIntegrityCheckData
an object containing the results of a relational integrity check.

    RelationalIntegrityCheckData(;
        parent_name=nothing,
        child_name=nothing,
        parent_id_attr=nothing,
        child_id_attr=nothing,
        records=nothing,
    )

    - parent_name::String : the name of the parent relation (table).
    - child_name::String : the name of the child relation (table).
    - parent_id_attr::String : the name of the attribute (column) containing the parent id.
    - child_id_attr::String : the name of the attribute (column) containing the child id.
    - records::Vector{OrphanedRecord} : the list of orphaned records found.
"""
Base.@kwdef mutable struct RelationalIntegrityCheckData <: OpenAPI.APIModel
    parent_name::Union{Nothing, String} = nothing
    child_name::Union{Nothing, String} = nothing
    parent_id_attr::Union{Nothing, String} = nothing
    child_id_attr::Union{Nothing, String} = nothing
    records::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OrphanedRecord} }

    function RelationalIntegrityCheckData(parent_name, child_name, parent_id_attr, child_id_attr, records, )
        OpenAPI.validate_property(RelationalIntegrityCheckData, Symbol("parent_name"), parent_name)
        OpenAPI.validate_property(RelationalIntegrityCheckData, Symbol("child_name"), child_name)
        OpenAPI.validate_property(RelationalIntegrityCheckData, Symbol("parent_id_attr"), parent_id_attr)
        OpenAPI.validate_property(RelationalIntegrityCheckData, Symbol("child_id_attr"), child_id_attr)
        OpenAPI.validate_property(RelationalIntegrityCheckData, Symbol("records"), records)
        return new(parent_name, child_name, parent_id_attr, child_id_attr, records, )
    end
end # type RelationalIntegrityCheckData

const _property_types_RelationalIntegrityCheckData = Dict{Symbol,String}(Symbol("parent_name")=>"String", Symbol("child_name")=>"String", Symbol("parent_id_attr")=>"String", Symbol("child_id_attr")=>"String", Symbol("records")=>"Vector{OrphanedRecord}", )
OpenAPI.property_type(::Type{ RelationalIntegrityCheckData }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_RelationalIntegrityCheckData[name]))}

function check_required(o::RelationalIntegrityCheckData)
    true
end

function OpenAPI.validate_property(::Type{ RelationalIntegrityCheckData }, name::Symbol, val)
end
