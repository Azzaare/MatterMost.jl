# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""SubmitInteractiveDialog_request

    SubmitInteractiveDialogRequest(;
        url=nothing,
        channel_id=nothing,
        team_id=nothing,
        submission=nothing,
        callback_id=nothing,
        state=nothing,
        cancelled=nothing,
    )

    - url::String : The URL to send the submitted dialog payload to
    - channel_id::String : Channel ID the user submitted the dialog from
    - team_id::String : Team ID the user submitted the dialog from
    - submission::Any : String map where keys are element names and values are the element input values
    - callback_id::String : Callback ID sent when the dialog was opened
    - state::String : State sent when the dialog was opened
    - cancelled::Bool : Set to true if the dialog was cancelled
"""
Base.@kwdef mutable struct SubmitInteractiveDialogRequest <: OpenAPI.APIModel
    url::Union{Nothing, String} = nothing
    channel_id::Union{Nothing, String} = nothing
    team_id::Union{Nothing, String} = nothing
    submission::Union{Nothing, Any} = nothing
    callback_id::Union{Nothing, String} = nothing
    state::Union{Nothing, String} = nothing
    cancelled::Union{Nothing, Bool} = nothing

    function SubmitInteractiveDialogRequest(url, channel_id, team_id, submission, callback_id, state, cancelled, )
        OpenAPI.validate_property(SubmitInteractiveDialogRequest, Symbol("url"), url)
        OpenAPI.validate_property(SubmitInteractiveDialogRequest, Symbol("channel_id"), channel_id)
        OpenAPI.validate_property(SubmitInteractiveDialogRequest, Symbol("team_id"), team_id)
        OpenAPI.validate_property(SubmitInteractiveDialogRequest, Symbol("submission"), submission)
        OpenAPI.validate_property(SubmitInteractiveDialogRequest, Symbol("callback_id"), callback_id)
        OpenAPI.validate_property(SubmitInteractiveDialogRequest, Symbol("state"), state)
        OpenAPI.validate_property(SubmitInteractiveDialogRequest, Symbol("cancelled"), cancelled)
        return new(url, channel_id, team_id, submission, callback_id, state, cancelled, )
    end
end # type SubmitInteractiveDialogRequest

const _property_types_SubmitInteractiveDialogRequest = Dict{Symbol,String}(Symbol("url")=>"String", Symbol("channel_id")=>"String", Symbol("team_id")=>"String", Symbol("submission")=>"Any", Symbol("callback_id")=>"String", Symbol("state")=>"String", Symbol("cancelled")=>"Bool", )
OpenAPI.property_type(::Type{ SubmitInteractiveDialogRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_SubmitInteractiveDialogRequest[name]))}

function check_required(o::SubmitInteractiveDialogRequest)
    o.url === nothing && (return false)
    o.channel_id === nothing && (return false)
    o.team_id === nothing && (return false)
    o.submission === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ SubmitInteractiveDialogRequest }, name::Symbol, val)
end
