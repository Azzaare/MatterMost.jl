# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Config

    Config(;
        ServiceSettings=nothing,
        TeamSettings=nothing,
        SqlSettings=nothing,
        LogSettings=nothing,
        PasswordSettings=nothing,
        FileSettings=nothing,
        EmailSettings=nothing,
        RateLimitSettings=nothing,
        PrivacySettings=nothing,
        SupportSettings=nothing,
        GitLabSettings=nothing,
        GoogleSettings=nothing,
        Office365Settings=nothing,
        LdapSettings=nothing,
        ComplianceSettings=nothing,
        LocalizationSettings=nothing,
        SamlSettings=nothing,
        NativeAppSettings=nothing,
        ClusterSettings=nothing,
        MetricsSettings=nothing,
        AnalyticsSettings=nothing,
    )

    - ServiceSettings::ConfigServiceSettings
    - TeamSettings::ConfigTeamSettings
    - SqlSettings::ConfigSqlSettings
    - LogSettings::ConfigLogSettings
    - PasswordSettings::ConfigPasswordSettings
    - FileSettings::ConfigFileSettings
    - EmailSettings::ConfigEmailSettings
    - RateLimitSettings::ConfigRateLimitSettings
    - PrivacySettings::ConfigPrivacySettings
    - SupportSettings::ConfigSupportSettings
    - GitLabSettings::ConfigGitLabSettings
    - GoogleSettings::ConfigGitLabSettings
    - Office365Settings::ConfigGitLabSettings
    - LdapSettings::ConfigLdapSettings
    - ComplianceSettings::ConfigComplianceSettings
    - LocalizationSettings::ConfigLocalizationSettings
    - SamlSettings::ConfigSamlSettings
    - NativeAppSettings::ConfigNativeAppSettings
    - ClusterSettings::ConfigClusterSettings
    - MetricsSettings::ConfigMetricsSettings
    - AnalyticsSettings::ConfigAnalyticsSettings
"""
Base.@kwdef mutable struct Config <: OpenAPI.APIModel
    ServiceSettings = nothing # spec type: Union{ Nothing, ConfigServiceSettings }
    TeamSettings = nothing # spec type: Union{ Nothing, ConfigTeamSettings }
    SqlSettings = nothing # spec type: Union{ Nothing, ConfigSqlSettings }
    LogSettings = nothing # spec type: Union{ Nothing, ConfigLogSettings }
    PasswordSettings = nothing # spec type: Union{ Nothing, ConfigPasswordSettings }
    FileSettings = nothing # spec type: Union{ Nothing, ConfigFileSettings }
    EmailSettings = nothing # spec type: Union{ Nothing, ConfigEmailSettings }
    RateLimitSettings = nothing # spec type: Union{ Nothing, ConfigRateLimitSettings }
    PrivacySettings = nothing # spec type: Union{ Nothing, ConfigPrivacySettings }
    SupportSettings = nothing # spec type: Union{ Nothing, ConfigSupportSettings }
    GitLabSettings = nothing # spec type: Union{ Nothing, ConfigGitLabSettings }
    GoogleSettings = nothing # spec type: Union{ Nothing, ConfigGitLabSettings }
    Office365Settings = nothing # spec type: Union{ Nothing, ConfigGitLabSettings }
    LdapSettings = nothing # spec type: Union{ Nothing, ConfigLdapSettings }
    ComplianceSettings = nothing # spec type: Union{ Nothing, ConfigComplianceSettings }
    LocalizationSettings = nothing # spec type: Union{ Nothing, ConfigLocalizationSettings }
    SamlSettings = nothing # spec type: Union{ Nothing, ConfigSamlSettings }
    NativeAppSettings = nothing # spec type: Union{ Nothing, ConfigNativeAppSettings }
    ClusterSettings = nothing # spec type: Union{ Nothing, ConfigClusterSettings }
    MetricsSettings = nothing # spec type: Union{ Nothing, ConfigMetricsSettings }
    AnalyticsSettings = nothing # spec type: Union{ Nothing, ConfigAnalyticsSettings }

    function Config(ServiceSettings, TeamSettings, SqlSettings, LogSettings, PasswordSettings, FileSettings, EmailSettings, RateLimitSettings, PrivacySettings, SupportSettings, GitLabSettings, GoogleSettings, Office365Settings, LdapSettings, ComplianceSettings, LocalizationSettings, SamlSettings, NativeAppSettings, ClusterSettings, MetricsSettings, AnalyticsSettings, )
        OpenAPI.validate_property(Config, Symbol("ServiceSettings"), ServiceSettings)
        OpenAPI.validate_property(Config, Symbol("TeamSettings"), TeamSettings)
        OpenAPI.validate_property(Config, Symbol("SqlSettings"), SqlSettings)
        OpenAPI.validate_property(Config, Symbol("LogSettings"), LogSettings)
        OpenAPI.validate_property(Config, Symbol("PasswordSettings"), PasswordSettings)
        OpenAPI.validate_property(Config, Symbol("FileSettings"), FileSettings)
        OpenAPI.validate_property(Config, Symbol("EmailSettings"), EmailSettings)
        OpenAPI.validate_property(Config, Symbol("RateLimitSettings"), RateLimitSettings)
        OpenAPI.validate_property(Config, Symbol("PrivacySettings"), PrivacySettings)
        OpenAPI.validate_property(Config, Symbol("SupportSettings"), SupportSettings)
        OpenAPI.validate_property(Config, Symbol("GitLabSettings"), GitLabSettings)
        OpenAPI.validate_property(Config, Symbol("GoogleSettings"), GoogleSettings)
        OpenAPI.validate_property(Config, Symbol("Office365Settings"), Office365Settings)
        OpenAPI.validate_property(Config, Symbol("LdapSettings"), LdapSettings)
        OpenAPI.validate_property(Config, Symbol("ComplianceSettings"), ComplianceSettings)
        OpenAPI.validate_property(Config, Symbol("LocalizationSettings"), LocalizationSettings)
        OpenAPI.validate_property(Config, Symbol("SamlSettings"), SamlSettings)
        OpenAPI.validate_property(Config, Symbol("NativeAppSettings"), NativeAppSettings)
        OpenAPI.validate_property(Config, Symbol("ClusterSettings"), ClusterSettings)
        OpenAPI.validate_property(Config, Symbol("MetricsSettings"), MetricsSettings)
        OpenAPI.validate_property(Config, Symbol("AnalyticsSettings"), AnalyticsSettings)
        return new(ServiceSettings, TeamSettings, SqlSettings, LogSettings, PasswordSettings, FileSettings, EmailSettings, RateLimitSettings, PrivacySettings, SupportSettings, GitLabSettings, GoogleSettings, Office365Settings, LdapSettings, ComplianceSettings, LocalizationSettings, SamlSettings, NativeAppSettings, ClusterSettings, MetricsSettings, AnalyticsSettings, )
    end
end # type Config

const _property_types_Config = Dict{Symbol,String}(Symbol("ServiceSettings")=>"ConfigServiceSettings", Symbol("TeamSettings")=>"ConfigTeamSettings", Symbol("SqlSettings")=>"ConfigSqlSettings", Symbol("LogSettings")=>"ConfigLogSettings", Symbol("PasswordSettings")=>"ConfigPasswordSettings", Symbol("FileSettings")=>"ConfigFileSettings", Symbol("EmailSettings")=>"ConfigEmailSettings", Symbol("RateLimitSettings")=>"ConfigRateLimitSettings", Symbol("PrivacySettings")=>"ConfigPrivacySettings", Symbol("SupportSettings")=>"ConfigSupportSettings", Symbol("GitLabSettings")=>"ConfigGitLabSettings", Symbol("GoogleSettings")=>"ConfigGitLabSettings", Symbol("Office365Settings")=>"ConfigGitLabSettings", Symbol("LdapSettings")=>"ConfigLdapSettings", Symbol("ComplianceSettings")=>"ConfigComplianceSettings", Symbol("LocalizationSettings")=>"ConfigLocalizationSettings", Symbol("SamlSettings")=>"ConfigSamlSettings", Symbol("NativeAppSettings")=>"ConfigNativeAppSettings", Symbol("ClusterSettings")=>"ConfigClusterSettings", Symbol("MetricsSettings")=>"ConfigMetricsSettings", Symbol("AnalyticsSettings")=>"ConfigAnalyticsSettings", )
OpenAPI.property_type(::Type{ Config }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Config[name]))}

function check_required(o::Config)
    true
end

function OpenAPI.validate_property(::Type{ Config }, name::Symbol, val)
end
