# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DataRetentionPolicyWithTeamAndChannelCounts_allOf

    DataRetentionPolicyWithTeamAndChannelCountsAllOf(;
        team_count=nothing,
        channel_count=nothing,
    )

    - team_count::Int64 : The number of teams to which this policy is applied.
    - channel_count::Int64 : The number of channels to which this policy is applied.
"""
Base.@kwdef mutable struct DataRetentionPolicyWithTeamAndChannelCountsAllOf <: OpenAPI.APIModel
    team_count::Union{Nothing, Int64} = nothing
    channel_count::Union{Nothing, Int64} = nothing

    function DataRetentionPolicyWithTeamAndChannelCountsAllOf(team_count, channel_count, )
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelCountsAllOf, Symbol("team_count"), team_count)
        OpenAPI.validate_property(DataRetentionPolicyWithTeamAndChannelCountsAllOf, Symbol("channel_count"), channel_count)
        return new(team_count, channel_count, )
    end
end # type DataRetentionPolicyWithTeamAndChannelCountsAllOf

const _property_types_DataRetentionPolicyWithTeamAndChannelCountsAllOf = Dict{Symbol,String}(Symbol("team_count")=>"Int64", Symbol("channel_count")=>"Int64", )
OpenAPI.property_type(::Type{ DataRetentionPolicyWithTeamAndChannelCountsAllOf }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DataRetentionPolicyWithTeamAndChannelCountsAllOf[name]))}

function check_required(o::DataRetentionPolicyWithTeamAndChannelCountsAllOf)
    true
end

function OpenAPI.validate_property(::Type{ DataRetentionPolicyWithTeamAndChannelCountsAllOf }, name::Symbol, val)
end
